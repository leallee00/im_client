// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.3
// source: pb_msg/ttk_game/ttk_game.proto

package ttk_game

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PATTERN 牌型枚举
type PATTERN int32

const (
	PATTERN_GENERAL_0      PATTERN = 0  // 无将
	PATTERN_GENERAL_1      PATTERN = 1  // 将1
	PATTERN_GENERAL_2      PATTERN = 2  // 将2
	PATTERN_GENERAL_3      PATTERN = 3  // 将3
	PATTERN_GENERAL_4      PATTERN = 4  // 将4
	PATTERN_GENERAL_5      PATTERN = 5  // 将5
	PATTERN_GENERAL_6      PATTERN = 6  // 将6
	PATTERN_GENERAL_7      PATTERN = 7  // 将7
	PATTERN_GENERAL_8      PATTERN = 8  // 将8
	PATTERN_GENERAL_9      PATTERN = 9  // 将9
	PATTERN_GENERAL_10     PATTERN = 10 // 双将
	PATTERN_SILVER_GENERAL PATTERN = 11 // 银将
	PATTERN_BOMB           PATTERN = 12 // 炸弹
	PATTERN_TIGER          PATTERN = 13 // 五虎将
	PATTERN_SMALL          PATTERN = 14 // 五小将
)

// Enum value maps for PATTERN.
var (
	PATTERN_name = map[int32]string{
		0:  "GENERAL_0",
		1:  "GENERAL_1",
		2:  "GENERAL_2",
		3:  "GENERAL_3",
		4:  "GENERAL_4",
		5:  "GENERAL_5",
		6:  "GENERAL_6",
		7:  "GENERAL_7",
		8:  "GENERAL_8",
		9:  "GENERAL_9",
		10: "GENERAL_10",
		11: "SILVER_GENERAL",
		12: "BOMB",
		13: "TIGER",
		14: "SMALL",
	}
	PATTERN_value = map[string]int32{
		"GENERAL_0":      0,
		"GENERAL_1":      1,
		"GENERAL_2":      2,
		"GENERAL_3":      3,
		"GENERAL_4":      4,
		"GENERAL_5":      5,
		"GENERAL_6":      6,
		"GENERAL_7":      7,
		"GENERAL_8":      8,
		"GENERAL_9":      9,
		"GENERAL_10":     10,
		"SILVER_GENERAL": 11,
		"BOMB":           12,
		"TIGER":          13,
		"SMALL":          14,
	}
)

func (x PATTERN) Enum() *PATTERN {
	p := new(PATTERN)
	*p = x
	return p
}

func (x PATTERN) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PATTERN) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_msg_ttk_game_ttk_game_proto_enumTypes[0].Descriptor()
}

func (PATTERN) Type() protoreflect.EnumType {
	return &file_pb_msg_ttk_game_ttk_game_proto_enumTypes[0]
}

func (x PATTERN) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PATTERN.Descriptor instead.
func (PATTERN) EnumDescriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{0}
}

// 牌的颜色枚举
type SUIT int32

const (
	SUIT_DIAMOND SUIT = 0 // 方块
	SUIT_CLUB    SUIT = 1 // 梅花
	SUIT_HEART   SUIT = 2 // 红桃
	SUIT_SPADE   SUIT = 3 // 黑桃
)

// Enum value maps for SUIT.
var (
	SUIT_name = map[int32]string{
		0: "DIAMOND",
		1: "CLUB",
		2: "HEART",
		3: "SPADE",
	}
	SUIT_value = map[string]int32{
		"DIAMOND": 0,
		"CLUB":    1,
		"HEART":   2,
		"SPADE":   3,
	}
)

func (x SUIT) Enum() *SUIT {
	p := new(SUIT)
	*p = x
	return p
}

func (x SUIT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SUIT) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_msg_ttk_game_ttk_game_proto_enumTypes[1].Descriptor()
}

func (SUIT) Type() protoreflect.EnumType {
	return &file_pb_msg_ttk_game_ttk_game_proto_enumTypes[1]
}

func (x SUIT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SUIT.Descriptor instead.
func (SUIT) EnumDescriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{1}
}

// 桌位区域枚举
type KINGDOM int32

const (
	KINGDOM_WEI KINGDOM = 0 // 魏
	KINGDOM_SHU KINGDOM = 1 // 蜀
	KINGDOM_WU  KINGDOM = 2 // 吴
	KINGDOM_QUN KINGDOM = 3 // 群
)

// Enum value maps for KINGDOM.
var (
	KINGDOM_name = map[int32]string{
		0: "WEI",
		1: "SHU",
		2: "WU",
		3: "QUN",
	}
	KINGDOM_value = map[string]int32{
		"WEI": 0,
		"SHU": 1,
		"WU":  2,
		"QUN": 3,
	}
)

func (x KINGDOM) Enum() *KINGDOM {
	p := new(KINGDOM)
	*p = x
	return p
}

func (x KINGDOM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KINGDOM) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_msg_ttk_game_ttk_game_proto_enumTypes[2].Descriptor()
}

func (KINGDOM) Type() protoreflect.EnumType {
	return &file_pb_msg_ttk_game_ttk_game_proto_enumTypes[2]
}

func (x KINGDOM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KINGDOM.Descriptor instead.
func (KINGDOM) EnumDescriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{2}
}

// 一张牌
type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"` // 1-13
	Suit   SUIT  `protobuf:"varint,2,opt,name=suit,proto3,enum=pb_msg_ttk_game.SUIT" json:"suit,omitempty"`
	Value  int32 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"` // 1-10  JQK->10
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{0}
}

func (x *Card) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Card) GetSuit() SUIT {
	if x != nil {
		return x.Suit
	}
	return SUIT_DIAMOND
}

func (x *Card) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// 一手牌
type Hand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pattern PATTERN `protobuf:"varint,1,opt,name=pattern,proto3,enum=pb_msg_ttk_game.PATTERN" json:"pattern,omitempty"` // 牌型
	Cards   []*Card `protobuf:"bytes,2,rep,name=cards,proto3" json:"cards,omitempty"`                                   // 牌面
}

func (x *Hand) Reset() {
	*x = Hand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hand) ProtoMessage() {}

func (x *Hand) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hand.ProtoReflect.Descriptor instead.
func (*Hand) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{1}
}

func (x *Hand) GetPattern() PATTERN {
	if x != nil {
		return x.Pattern
	}
	return PATTERN_GENERAL_0
}

func (x *Hand) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

// 一个桌位
type Side struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hand         *Hand `protobuf:"bytes,1,opt,name=hand,proto3" json:"hand,omitempty"`                  // 武将牌
	Win          bool  `protobuf:"varint,2,opt,name=win,proto3" json:"win,omitempty"`                   // 胜负 true 胜 false 负
	Odds         int32 `protobuf:"varint,3,opt,name=odds,proto3" json:"odds,omitempty"`                 // 赔率
	Amount       int64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`             // 注金总额
	HasIncognito bool  `protobuf:"varint,5,opt,name=hasIncognito,proto3" json:"hasIncognito,omitempty"` // 是否有神秘人下注
	PublicAmouut int64 `protobuf:"varint,6,opt,name=publicAmouut,proto3" json:"publicAmouut,omitempty"` // 普通用户的下注总额
}

func (x *Side) Reset() {
	*x = Side{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Side) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Side) ProtoMessage() {}

func (x *Side) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Side.ProtoReflect.Descriptor instead.
func (*Side) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{2}
}

func (x *Side) GetHand() *Hand {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *Side) GetWin() bool {
	if x != nil {
		return x.Win
	}
	return false
}

func (x *Side) GetOdds() int32 {
	if x != nil {
		return x.Odds
	}
	return 0
}

func (x *Side) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Side) GetHasIncognito() bool {
	if x != nil {
		return x.HasIncognito
	}
	return false
}

func (x *Side) GetPublicAmouut() int64 {
	if x != nil {
		return x.PublicAmouut
	}
	return 0
}

// 游戏模型,进房单推
type TTKGameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	No      int64   `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`           // 牌局编号
	State   int32   `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`     // 当前状态 1 下注中 2 开牌结算中
	EndTime int64   `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"` // 状态截止时间
	Hand    *Hand   `protobuf:"bytes,4,opt,name=hand,proto3" json:"hand,omitempty"`        // 天子牌
	Sides   []*Side `protobuf:"bytes,5,rep,name=sides,proto3" json:"sides,omitempty"`      // 桌位信息
}

func (x *TTKGameInfo) Reset() {
	*x = TTKGameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTKGameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTKGameInfo) ProtoMessage() {}

func (x *TTKGameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTKGameInfo.ProtoReflect.Descriptor instead.
func (*TTKGameInfo) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{3}
}

func (x *TTKGameInfo) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *TTKGameInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *TTKGameInfo) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *TTKGameInfo) GetHand() *Hand {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *TTKGameInfo) GetSides() []*Side {
	if x != nil {
		return x.Sides
	}
	return nil
}

// 玩家模型,开牌单推
type TTKPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         int64   `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Username       string  `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Bets           []int64 `protobuf:"varint,3,rep,packed,name=bets,proto3" json:"bets,omitempty"`
	CoinBalance    int64   `protobuf:"varint,4,opt,name=coinBalance,proto3" json:"coinBalance,omitempty"`       // 用户椰币余额
	CocoBalance    int64   `protobuf:"varint,5,opt,name=cocoBalance,proto3" json:"cocoBalance,omitempty"`       // 用户椰豆余额
	WinLose        int64   `protobuf:"varint,6,opt,name=winLose,proto3" json:"winLose,omitempty"`               // 战功
	Incognito      bool    `protobuf:"varint,7,opt,name=incognito,proto3" json:"incognito,omitempty"`           // 是否开启神秘投注模式
	IncognitoTimes int32   `protobuf:"varint,8,opt,name=incognitoTimes,proto3" json:"incognitoTimes,omitempty"` // 今日剩余神秘投注的次数
}

func (x *TTKPlayerInfo) Reset() {
	*x = TTKPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTKPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTKPlayerInfo) ProtoMessage() {}

func (x *TTKPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTKPlayerInfo.ProtoReflect.Descriptor instead.
func (*TTKPlayerInfo) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{4}
}

func (x *TTKPlayerInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TTKPlayerInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TTKPlayerInfo) GetBets() []int64 {
	if x != nil {
		return x.Bets
	}
	return nil
}

func (x *TTKPlayerInfo) GetCoinBalance() int64 {
	if x != nil {
		return x.CoinBalance
	}
	return 0
}

func (x *TTKPlayerInfo) GetCocoBalance() int64 {
	if x != nil {
		return x.CocoBalance
	}
	return 0
}

func (x *TTKPlayerInfo) GetWinLose() int64 {
	if x != nil {
		return x.WinLose
	}
	return 0
}

func (x *TTKPlayerInfo) GetIncognito() bool {
	if x != nil {
		return x.Incognito
	}
	return false
}

func (x *TTKPlayerInfo) GetIncognitoTimes() int32 {
	if x != nil {
		return x.IncognitoTimes
	}
	return 0
}

// 战功榜(前10条),开牌群推,进房单推
type TTKWinnerBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Winners []*TTKPlayerInfo `protobuf:"bytes,2,rep,name=winners,proto3" json:"winners,omitempty"` // 战功榜
}

func (x *TTKWinnerBoard) Reset() {
	*x = TTKWinnerBoard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTKWinnerBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTKWinnerBoard) ProtoMessage() {}

func (x *TTKWinnerBoard) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTKWinnerBoard.ProtoReflect.Descriptor instead.
func (*TTKWinnerBoard) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{5}
}

func (x *TTKWinnerBoard) GetWinners() []*TTKPlayerInfo {
	if x != nil {
		return x.Winners
	}
	return nil
}

// 开始下注通知
type BetStartNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	No      int64 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`           // 牌局编号
	EndTime int64 `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"` // 状态截止时间
}

func (x *BetStartNotify) Reset() {
	*x = BetStartNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetStartNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetStartNotify) ProtoMessage() {}

func (x *BetStartNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetStartNotify.ProtoReflect.Descriptor instead.
func (*BetStartNotify) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{6}
}

func (x *BetStartNotify) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *BetStartNotify) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

// 桌位注金变化通知
type SideChangeNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sides []*Side `protobuf:"bytes,1,rep,name=sides,proto3" json:"sides,omitempty"`
}

func (x *SideChangeNotify) Reset() {
	*x = SideChangeNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SideChangeNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SideChangeNotify) ProtoMessage() {}

func (x *SideChangeNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SideChangeNotify.ProtoReflect.Descriptor instead.
func (*SideChangeNotify) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{7}
}

func (x *SideChangeNotify) GetSides() []*Side {
	if x != nil {
		return x.Sides
	}
	return nil
}

// 下注请求
type BetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	No        int64   `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`                                        // 牌局编号
	Username  string  `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`                             // 玩家名字
	Kingdom   KINGDOM `protobuf:"varint,3,opt,name=kingdom,proto3,enum=pb_msg_ttk_game.KINGDOM" json:"kingdom,omitempty"` // 下注区域
	Amount    int64   `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`                                // 下注金额
	Incognito bool    `protobuf:"varint,5,opt,name=incognito,proto3" json:"incognito,omitempty"`                          // 是否开启神秘投注模式
}

func (x *BetReq) Reset() {
	*x = BetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetReq) ProtoMessage() {}

func (x *BetReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetReq.ProtoReflect.Descriptor instead.
func (*BetReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{8}
}

func (x *BetReq) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *BetReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BetReq) GetKingdom() KINGDOM {
	if x != nil {
		return x.Kingdom
	}
	return KINGDOM_WEI
}

func (x *BetReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *BetReq) GetIncognito() bool {
	if x != nil {
		return x.Incognito
	}
	return false
}

// 下注响应
type BetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sides      []*Side        `protobuf:"bytes,1,rep,name=sides,proto3" json:"sides,omitempty"`           // 最新桌位下注金额
	PlayerInfo *TTKPlayerInfo `protobuf:"bytes,2,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"` // 用户信息
	No         int64          `protobuf:"varint,3,opt,name=no,proto3" json:"no,omitempty"`                // 牌局编号
}

func (x *BetRsp) Reset() {
	*x = BetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetRsp) ProtoMessage() {}

func (x *BetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetRsp.ProtoReflect.Descriptor instead.
func (*BetRsp) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{9}
}

func (x *BetRsp) GetSides() []*Side {
	if x != nil {
		return x.Sides
	}
	return nil
}

func (x *BetRsp) GetPlayerInfo() *TTKPlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *BetRsp) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

// 重复上局下注
type RepeatBetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	No        int64   `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`               // 牌局编号
	Username  string  `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`    // 玩家名字
	Bets      []int64 `protobuf:"varint,3,rep,packed,name=bets,proto3" json:"bets,omitempty"`    // [桌位编号]下注金额
	Incognito bool    `protobuf:"varint,4,opt,name=incognito,proto3" json:"incognito,omitempty"` // 是否开启神秘投注模式
}

func (x *RepeatBetReq) Reset() {
	*x = RepeatBetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatBetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatBetReq) ProtoMessage() {}

func (x *RepeatBetReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatBetReq.ProtoReflect.Descriptor instead.
func (*RepeatBetReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{10}
}

func (x *RepeatBetReq) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *RepeatBetReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RepeatBetReq) GetBets() []int64 {
	if x != nil {
		return x.Bets
	}
	return nil
}

func (x *RepeatBetReq) GetIncognito() bool {
	if x != nil {
		return x.Incognito
	}
	return false
}

type RepeatBetRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sides      []*Side        `protobuf:"bytes,1,rep,name=sides,proto3" json:"sides,omitempty"`           // 最新桌位下注金额
	PlayerInfo *TTKPlayerInfo `protobuf:"bytes,2,opt,name=playerInfo,proto3" json:"playerInfo,omitempty"` // 用户信息
	No         int64          `protobuf:"varint,3,opt,name=no,proto3" json:"no,omitempty"`                // 牌局编号
}

func (x *RepeatBetRsp) Reset() {
	*x = RepeatBetRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatBetRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatBetRsp) ProtoMessage() {}

func (x *RepeatBetRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatBetRsp.ProtoReflect.Descriptor instead.
func (*RepeatBetRsp) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{11}
}

func (x *RepeatBetRsp) GetSides() []*Side {
	if x != nil {
		return x.Sides
	}
	return nil
}

func (x *RepeatBetRsp) GetPlayerInfo() *TTKPlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *RepeatBetRsp) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

// 获取本局战功榜数据
type WinnersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	No     int64 `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`         // 牌局编号
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"` // 起始偏移
	Count  int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`   // 数量
}

func (x *WinnersReq) Reset() {
	*x = WinnersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WinnersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinnersReq) ProtoMessage() {}

func (x *WinnersReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinnersReq.ProtoReflect.Descriptor instead.
func (*WinnersReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{12}
}

func (x *WinnersReq) GetNo() int64 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *WinnersReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *WinnersReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type WinnersRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Winners []*TTKPlayerInfo `protobuf:"bytes,1,rep,name=winners,proto3" json:"winners,omitempty"`
}

func (x *WinnersRsp) Reset() {
	*x = WinnersRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WinnersRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinnersRsp) ProtoMessage() {}

func (x *WinnersRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinnersRsp.ProtoReflect.Descriptor instead.
func (*WinnersRsp) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{13}
}

func (x *WinnersRsp) GetWinners() []*TTKPlayerInfo {
	if x != nil {
		return x.Winners
	}
	return nil
}

// 开牌通知
type DealStartNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game *TTKGameInfo `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *DealStartNotify) Reset() {
	*x = DealStartNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealStartNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealStartNotify) ProtoMessage() {}

func (x *DealStartNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealStartNotify.ProtoReflect.Descriptor instead.
func (*DealStartNotify) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{14}
}

func (x *DealStartNotify) GetGame() *TTKGameInfo {
	if x != nil {
		return x.Game
	}
	return nil
}

// 更新游戏配置
type UpdateGameConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateGameConfig) Reset() {
	*x = UpdateGameConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGameConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameConfig) ProtoMessage() {}

func (x *UpdateGameConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameConfig.ProtoReflect.Descriptor instead.
func (*UpdateGameConfig) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{15}
}

// 设置奖池大小
type SetGamePool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount int64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"` // 奖池大小
}

func (x *SetGamePool) Reset() {
	*x = SetGamePool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGamePool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGamePool) ProtoMessage() {}

func (x *SetGamePool) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGamePool.ProtoReflect.Descriptor instead.
func (*SetGamePool) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{16}
}

func (x *SetGamePool) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// 设置桌位权重
type SetKingdomWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weights []int32 `protobuf:"varint,1,rep,packed,name=weights,proto3" json:"weights,omitempty"` // [桌位] 权重 0 1 2
}

func (x *SetKingdomWeight) Reset() {
	*x = SetKingdomWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetKingdomWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetKingdomWeight) ProtoMessage() {}

func (x *SetKingdomWeight) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetKingdomWeight.ProtoReflect.Descriptor instead.
func (*SetKingdomWeight) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{17}
}

func (x *SetKingdomWeight) GetWeights() []int32 {
	if x != nil {
		return x.Weights
	}
	return nil
}

// GET /ttk/game-state?appId=XXX&secrect=XXX
type TTKGameStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TTKGameStateReq) Reset() {
	*x = TTKGameStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTKGameStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTKGameStateReq) ProtoMessage() {}

func (x *TTKGameStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTKGameStateReq.ProtoReflect.Descriptor instead.
func (*TTKGameStateReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{18}
}

type TTKGameStateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State     int32         `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`         // 当前状态 1 下注中 2 开牌结算中
	Countdown int64         `protobuf:"varint,2,opt,name=countdown,proto3" json:"countdown,omitempty"` // 倒计时
	Kingdoms  []*TTKKingdom `protobuf:"bytes,3,rep,name=kingdoms,proto3" json:"kingdoms,omitempty"`
}

func (x *TTKGameStateRsp) Reset() {
	*x = TTKGameStateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTKGameStateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTKGameStateRsp) ProtoMessage() {}

func (x *TTKGameStateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTKGameStateRsp.ProtoReflect.Descriptor instead.
func (*TTKGameStateRsp) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{19}
}

func (x *TTKGameStateRsp) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *TTKGameStateRsp) GetCountdown() int64 {
	if x != nil {
		return x.Countdown
	}
	return 0
}

func (x *TTKGameStateRsp) GetKingdoms() []*TTKKingdom {
	if x != nil {
		return x.Kingdoms
	}
	return nil
}

type TTKKingdom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*TTKKingdom_Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"` // 当前桌位玩家列表
	Total   int64                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`    // 当前桌位总额
}

func (x *TTKKingdom) Reset() {
	*x = TTKKingdom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTKKingdom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTKKingdom) ProtoMessage() {}

func (x *TTKKingdom) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTKKingdom.ProtoReflect.Descriptor instead.
func (*TTKKingdom) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{20}
}

func (x *TTKKingdom) GetPlayers() []*TTKKingdom_Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *TTKKingdom) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type TTKKingdom_Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`             // 用户id
	Bet          int64 `protobuf:"varint,2,opt,name=bet,proto3" json:"bet,omitempty"`                   // 下注金额
	UserGameType int32 `protobuf:"varint,3,opt,name=userGameType,proto3" json:"userGameType,omitempty"` // 用户类型
}

func (x *TTKKingdom_Player) Reset() {
	*x = TTKKingdom_Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TTKKingdom_Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TTKKingdom_Player) ProtoMessage() {}

func (x *TTKKingdom_Player) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_ttk_game_ttk_game_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TTKKingdom_Player.ProtoReflect.Descriptor instead.
func (*TTKKingdom_Player) Descriptor() ([]byte, []int) {
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP(), []int{20, 0}
}

func (x *TTKKingdom_Player) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TTKKingdom_Player) GetBet() int64 {
	if x != nil {
		return x.Bet
	}
	return 0
}

func (x *TTKKingdom_Player) GetUserGameType() int32 {
	if x != nil {
		return x.UserGameType
	}
	return 0
}

var File_pb_msg_ttk_game_ttk_game_proto protoreflect.FileDescriptor

var file_pb_msg_ttk_game_ttk_game_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d,
	0x65, 0x2f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d,
	0x65, 0x22, 0x5f, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x29, 0x0a, 0x04, 0x73, 0x75, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x53, 0x55, 0x49, 0x54, 0x52, 0x04, 0x73, 0x75, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x67, 0x0a, 0x04, 0x48, 0x61, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x62,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x41,
	0x54, 0x54, 0x45, 0x52, 0x4e, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x2b,
	0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x04,
	0x53, 0x69, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b, 0x5f,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x52, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x77, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x77, 0x69,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x64, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x6f, 0x64, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74,
	0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x6d, 0x6f, 0x75, 0x75,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41,
	0x6d, 0x6f, 0x75, 0x75, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x0b, 0x54, 0x54, 0x4b, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x6e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b,
	0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x52, 0x04, 0x68, 0x61, 0x6e, 0x64,
	0x12, 0x2b, 0x0a, 0x05, 0x73, 0x69, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x05, 0x73, 0x69, 0x64, 0x65, 0x73, 0x22, 0xfb, 0x01,
	0x0a, 0x0d, 0x54, 0x54, 0x4b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x04, 0x62, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f,
	0x69, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x63,
	0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x6f, 0x63, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77,
	0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x77, 0x69,
	0x6e, 0x4c, 0x6f, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x63, 0x6f, 0x67, 0x6e, 0x69,
	0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6e, 0x63, 0x6f, 0x67, 0x6e,
	0x69, 0x74, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x6e, 0x63,
	0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x0e, 0x54,
	0x54, 0x4b, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x38, 0x0a,
	0x07, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x54, 0x54, 0x4b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x3a, 0x0a, 0x0e, 0x42, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x10, 0x53, 0x69, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x69, 0x64, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f,
	0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x05, 0x73,
	0x69, 0x64, 0x65, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x06, 0x42, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x6b,
	0x69, 0x6e, 0x67, 0x64, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70,
	0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4b,
	0x49, 0x4e, 0x47, 0x44, 0x4f, 0x4d, 0x52, 0x07, 0x6b, 0x69, 0x6e, 0x67, 0x64, 0x6f, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x63, 0x6f, 0x67,
	0x6e, 0x69, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6e, 0x63, 0x6f,
	0x67, 0x6e, 0x69, 0x74, 0x6f, 0x22, 0x85, 0x01, 0x0a, 0x06, 0x42, 0x65, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x2b, 0x0a, 0x05, 0x73, 0x69, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x05, 0x73, 0x69, 0x64, 0x65, 0x73, 0x12, 0x3e, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b, 0x5f, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x54, 0x54, 0x4b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f, 0x22, 0x6c, 0x0a,
	0x0c, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x42, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x62, 0x65, 0x74, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x6e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x0c,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x42, 0x65, 0x74, 0x52, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x05,
	0x73, 0x69, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x69,
	0x64, 0x65, 0x52, 0x05, 0x73, 0x69, 0x64, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x54, 0x54, 0x4b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f, 0x22, 0x4a, 0x0a, 0x0a, 0x57, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x6e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x0a, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73,
	0x52, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74,
	0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x54, 0x54, 0x4b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x43, 0x0a,
	0x0f, 0x44, 0x65, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x30, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x54, 0x54, 0x4b, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x67, 0x61,
	0x6d, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x25, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2c, 0x0a,
	0x10, 0x53, 0x65, 0x74, 0x4b, 0x69, 0x6e, 0x67, 0x64, 0x6f, 0x6d, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x54,
	0x54, 0x4b, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x22, 0x7e,
	0x0a, 0x0f, 0x54, 0x54, 0x4b, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x37, 0x0a, 0x08, 0x6b, 0x69, 0x6e, 0x67, 0x64, 0x6f, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x54, 0x54, 0x4b, 0x4b, 0x69, 0x6e,
	0x67, 0x64, 0x6f, 0x6d, 0x52, 0x08, 0x6b, 0x69, 0x6e, 0x67, 0x64, 0x6f, 0x6d, 0x73, 0x22, 0xb8,
	0x01, 0x0a, 0x0a, 0x54, 0x54, 0x4b, 0x4b, 0x69, 0x6e, 0x67, 0x64, 0x6f, 0x6d, 0x12, 0x3c, 0x0a,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x54, 0x54, 0x4b, 0x4b, 0x69, 0x6e, 0x67, 0x64, 0x6f, 0x6d, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x1a, 0x56, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x62, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2a, 0xe3, 0x01, 0x0a, 0x07, 0x50, 0x41,
	0x54, 0x54, 0x45, 0x52, 0x4e, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c,
	0x5f, 0x30, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f,
	0x31, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x32,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x33, 0x10,
	0x03, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x34, 0x10, 0x04,
	0x12, 0x0d, 0x0a, 0x09, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x35, 0x10, 0x05, 0x12,
	0x0d, 0x0a, 0x09, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x36, 0x10, 0x06, 0x12, 0x0d,
	0x0a, 0x09, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x37, 0x10, 0x07, 0x12, 0x0d, 0x0a,
	0x09, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x38, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09,
	0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x39, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x47,
	0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x5f, 0x31, 0x30, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x53,
	0x49, 0x4c, 0x56, 0x45, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x4c, 0x10, 0x0b, 0x12,
	0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4d, 0x42, 0x10, 0x0c, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x49, 0x47,
	0x45, 0x52, 0x10, 0x0d, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x10, 0x0e, 0x2a,
	0x33, 0x0a, 0x04, 0x53, 0x55, 0x49, 0x54, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x49, 0x41, 0x4d, 0x4f,
	0x4e, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x4c, 0x55, 0x42, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x48, 0x45, 0x41, 0x52, 0x54, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x50, 0x41,
	0x44, 0x45, 0x10, 0x03, 0x2a, 0x2c, 0x0a, 0x07, 0x4b, 0x49, 0x4e, 0x47, 0x44, 0x4f, 0x4d, 0x12,
	0x07, 0x0a, 0x03, 0x57, 0x45, 0x49, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x48, 0x55, 0x10,
	0x01, 0x12, 0x06, 0x0a, 0x02, 0x57, 0x55, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x51, 0x55, 0x4e,
	0x10, 0x03, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x65, 0x61, 0x6c, 0x6c, 0x65, 0x65, 0x30, 0x30, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62,
	0x5f, 0x6d, 0x73, 0x67, 0x2f, 0x74, 0x74, 0x6b, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_msg_ttk_game_ttk_game_proto_rawDescOnce sync.Once
	file_pb_msg_ttk_game_ttk_game_proto_rawDescData = file_pb_msg_ttk_game_ttk_game_proto_rawDesc
)

func file_pb_msg_ttk_game_ttk_game_proto_rawDescGZIP() []byte {
	file_pb_msg_ttk_game_ttk_game_proto_rawDescOnce.Do(func() {
		file_pb_msg_ttk_game_ttk_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_msg_ttk_game_ttk_game_proto_rawDescData)
	})
	return file_pb_msg_ttk_game_ttk_game_proto_rawDescData
}

var file_pb_msg_ttk_game_ttk_game_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pb_msg_ttk_game_ttk_game_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_pb_msg_ttk_game_ttk_game_proto_goTypes = []interface{}{
	(PATTERN)(0),              // 0: pb_msg_ttk_game.PATTERN
	(SUIT)(0),                 // 1: pb_msg_ttk_game.SUIT
	(KINGDOM)(0),              // 2: pb_msg_ttk_game.KINGDOM
	(*Card)(nil),              // 3: pb_msg_ttk_game.Card
	(*Hand)(nil),              // 4: pb_msg_ttk_game.Hand
	(*Side)(nil),              // 5: pb_msg_ttk_game.Side
	(*TTKGameInfo)(nil),       // 6: pb_msg_ttk_game.TTKGameInfo
	(*TTKPlayerInfo)(nil),     // 7: pb_msg_ttk_game.TTKPlayerInfo
	(*TTKWinnerBoard)(nil),    // 8: pb_msg_ttk_game.TTKWinnerBoard
	(*BetStartNotify)(nil),    // 9: pb_msg_ttk_game.BetStartNotify
	(*SideChangeNotify)(nil),  // 10: pb_msg_ttk_game.SideChangeNotify
	(*BetReq)(nil),            // 11: pb_msg_ttk_game.BetReq
	(*BetRsp)(nil),            // 12: pb_msg_ttk_game.BetRsp
	(*RepeatBetReq)(nil),      // 13: pb_msg_ttk_game.RepeatBetReq
	(*RepeatBetRsp)(nil),      // 14: pb_msg_ttk_game.RepeatBetRsp
	(*WinnersReq)(nil),        // 15: pb_msg_ttk_game.WinnersReq
	(*WinnersRsp)(nil),        // 16: pb_msg_ttk_game.WinnersRsp
	(*DealStartNotify)(nil),   // 17: pb_msg_ttk_game.DealStartNotify
	(*UpdateGameConfig)(nil),  // 18: pb_msg_ttk_game.UpdateGameConfig
	(*SetGamePool)(nil),       // 19: pb_msg_ttk_game.SetGamePool
	(*SetKingdomWeight)(nil),  // 20: pb_msg_ttk_game.SetKingdomWeight
	(*TTKGameStateReq)(nil),   // 21: pb_msg_ttk_game.TTKGameStateReq
	(*TTKGameStateRsp)(nil),   // 22: pb_msg_ttk_game.TTKGameStateRsp
	(*TTKKingdom)(nil),        // 23: pb_msg_ttk_game.TTKKingdom
	(*TTKKingdom_Player)(nil), // 24: pb_msg_ttk_game.TTKKingdom.Player
}
var file_pb_msg_ttk_game_ttk_game_proto_depIdxs = []int32{
	1,  // 0: pb_msg_ttk_game.Card.suit:type_name -> pb_msg_ttk_game.SUIT
	0,  // 1: pb_msg_ttk_game.Hand.pattern:type_name -> pb_msg_ttk_game.PATTERN
	3,  // 2: pb_msg_ttk_game.Hand.cards:type_name -> pb_msg_ttk_game.Card
	4,  // 3: pb_msg_ttk_game.Side.hand:type_name -> pb_msg_ttk_game.Hand
	4,  // 4: pb_msg_ttk_game.TTKGameInfo.hand:type_name -> pb_msg_ttk_game.Hand
	5,  // 5: pb_msg_ttk_game.TTKGameInfo.sides:type_name -> pb_msg_ttk_game.Side
	7,  // 6: pb_msg_ttk_game.TTKWinnerBoard.winners:type_name -> pb_msg_ttk_game.TTKPlayerInfo
	5,  // 7: pb_msg_ttk_game.SideChangeNotify.sides:type_name -> pb_msg_ttk_game.Side
	2,  // 8: pb_msg_ttk_game.BetReq.kingdom:type_name -> pb_msg_ttk_game.KINGDOM
	5,  // 9: pb_msg_ttk_game.BetRsp.sides:type_name -> pb_msg_ttk_game.Side
	7,  // 10: pb_msg_ttk_game.BetRsp.playerInfo:type_name -> pb_msg_ttk_game.TTKPlayerInfo
	5,  // 11: pb_msg_ttk_game.RepeatBetRsp.sides:type_name -> pb_msg_ttk_game.Side
	7,  // 12: pb_msg_ttk_game.RepeatBetRsp.playerInfo:type_name -> pb_msg_ttk_game.TTKPlayerInfo
	7,  // 13: pb_msg_ttk_game.WinnersRsp.winners:type_name -> pb_msg_ttk_game.TTKPlayerInfo
	6,  // 14: pb_msg_ttk_game.DealStartNotify.game:type_name -> pb_msg_ttk_game.TTKGameInfo
	23, // 15: pb_msg_ttk_game.TTKGameStateRsp.kingdoms:type_name -> pb_msg_ttk_game.TTKKingdom
	24, // 16: pb_msg_ttk_game.TTKKingdom.players:type_name -> pb_msg_ttk_game.TTKKingdom.Player
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_pb_msg_ttk_game_ttk_game_proto_init() }
func file_pb_msg_ttk_game_ttk_game_proto_init() {
	if File_pb_msg_ttk_game_ttk_game_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Side); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTKGameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTKPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTKWinnerBoard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetStartNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SideChangeNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatBetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatBetRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WinnersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WinnersRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealStartNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGameConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGamePool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetKingdomWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTKGameStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTKGameStateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTKKingdom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_ttk_game_ttk_game_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TTKKingdom_Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_msg_ttk_game_ttk_game_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_msg_ttk_game_ttk_game_proto_goTypes,
		DependencyIndexes: file_pb_msg_ttk_game_ttk_game_proto_depIdxs,
		EnumInfos:         file_pb_msg_ttk_game_ttk_game_proto_enumTypes,
		MessageInfos:      file_pb_msg_ttk_game_ttk_game_proto_msgTypes,
	}.Build()
	File_pb_msg_ttk_game_ttk_game_proto = out.File
	file_pb_msg_ttk_game_ttk_game_proto_rawDesc = nil
	file_pb_msg_ttk_game_ttk_game_proto_goTypes = nil
	file_pb_msg_ttk_game_ttk_game_proto_depIdxs = nil
}
