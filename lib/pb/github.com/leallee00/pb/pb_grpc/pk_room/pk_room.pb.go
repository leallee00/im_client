// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.3
// source: pb_grpc/pk_room/pk_room.proto

package pk_room

import (
	context "context"
	pk_room "github.com/leallee00/pb/pb_msg/pk_room"
	pb_pub "github.com/leallee00/pb/pb_pub"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FieldsPKOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank         int64 `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`                 // 段位
	VictoryTimes int64 `protobuf:"varint,5,opt,name=victoryTimes,proto3" json:"victoryTimes,omitempty"` // 连胜次数
}

func (x *FieldsPKOver) Reset() {
	*x = FieldsPKOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldsPKOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldsPKOver) ProtoMessage() {}

func (x *FieldsPKOver) ProtoReflect() protoreflect.Message {
	mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldsPKOver.ProtoReflect.Descriptor instead.
func (*FieldsPKOver) Descriptor() ([]byte, []int) {
	return file_pb_grpc_pk_room_pk_room_proto_rawDescGZIP(), []int{0}
}

func (x *FieldsPKOver) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *FieldsPKOver) GetVictoryTimes() int64 {
	if x != nil {
		return x.VictoryTimes
	}
	return 0
}

type CreateRandRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkType  pk_room.PK_TYPE `protobuf:"varint,1,opt,name=pkType,proto3,enum=pb_msg_pk_room.PK_TYPE" json:"pkType,omitempty"`
	PkTopic string          `protobuf:"bytes,2,opt,name=pkTopic,proto3" json:"pkTopic,omitempty"`
}

func (x *CreateRandRoomReq) Reset() {
	*x = CreateRandRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRandRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRandRoomReq) ProtoMessage() {}

func (x *CreateRandRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRandRoomReq.ProtoReflect.Descriptor instead.
func (*CreateRandRoomReq) Descriptor() ([]byte, []int) {
	return file_pb_grpc_pk_room_pk_room_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRandRoomReq) GetPkType() pk_room.PK_TYPE {
	if x != nil {
		return x.PkType
	}
	return pk_room.PK_TYPE(0)
}

func (x *CreateRandRoomReq) GetPkTopic() string {
	if x != nil {
		return x.PkTopic
	}
	return ""
}

type CreateRandRoomRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRandRoomRsp) Reset() {
	*x = CreateRandRoomRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRandRoomRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRandRoomRsp) ProtoMessage() {}

func (x *CreateRandRoomRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRandRoomRsp.ProtoReflect.Descriptor instead.
func (*CreateRandRoomRsp) Descriptor() ([]byte, []int) {
	return file_pb_grpc_pk_room_pk_room_proto_rawDescGZIP(), []int{2}
}

type CreateRankRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkTopic string  `protobuf:"bytes,1,opt,name=pkTopic,proto3" json:"pkTopic,omitempty"`
	Aid     int64   `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Ascore  float64 `protobuf:"fixed64,3,opt,name=ascore,proto3" json:"ascore,omitempty"`
	Bid     int64   `protobuf:"varint,4,opt,name=bid,proto3" json:"bid,omitempty"`
	Bscore  float64 `protobuf:"fixed64,5,opt,name=bscore,proto3" json:"bscore,omitempty"`
}

func (x *CreateRankRoomReq) Reset() {
	*x = CreateRankRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRankRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRankRoomReq) ProtoMessage() {}

func (x *CreateRankRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRankRoomReq.ProtoReflect.Descriptor instead.
func (*CreateRankRoomReq) Descriptor() ([]byte, []int) {
	return file_pb_grpc_pk_room_pk_room_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRankRoomReq) GetPkTopic() string {
	if x != nil {
		return x.PkTopic
	}
	return ""
}

func (x *CreateRankRoomReq) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *CreateRankRoomReq) GetAscore() float64 {
	if x != nil {
		return x.Ascore
	}
	return 0
}

func (x *CreateRankRoomReq) GetBid() int64 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *CreateRankRoomReq) GetBscore() float64 {
	if x != nil {
		return x.Bscore
	}
	return 0
}

type CreateRankRoomRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRankRoomRsp) Reset() {
	*x = CreateRankRoomRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRankRoomRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRankRoomRsp) ProtoMessage() {}

func (x *CreateRankRoomRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRankRoomRsp.ProtoReflect.Descriptor instead.
func (*CreateRankRoomRsp) Descriptor() ([]byte, []int) {
	return file_pb_grpc_pk_room_pk_room_proto_rawDescGZIP(), []int{4}
}

type CreateInviteRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkTopic string `protobuf:"bytes,1,opt,name=pkTopic,proto3" json:"pkTopic,omitempty"`
}

func (x *CreateInviteRoomReq) Reset() {
	*x = CreateInviteRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInviteRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInviteRoomReq) ProtoMessage() {}

func (x *CreateInviteRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInviteRoomReq.ProtoReflect.Descriptor instead.
func (*CreateInviteRoomReq) Descriptor() ([]byte, []int) {
	return file_pb_grpc_pk_room_pk_room_proto_rawDescGZIP(), []int{5}
}

func (x *CreateInviteRoomReq) GetPkTopic() string {
	if x != nil {
		return x.PkTopic
	}
	return ""
}

type CreateInviteRoomRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateInviteRoomRsp) Reset() {
	*x = CreateInviteRoomRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInviteRoomRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInviteRoomRsp) ProtoMessage() {}

func (x *CreateInviteRoomRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInviteRoomRsp.ProtoReflect.Descriptor instead.
func (*CreateInviteRoomRsp) Descriptor() ([]byte, []int) {
	return file_pb_grpc_pk_room_pk_room_proto_rawDescGZIP(), []int{6}
}

type Attach struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID int64 `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
}

func (x *Attach) Reset() {
	*x = Attach{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attach) ProtoMessage() {}

func (x *Attach) ProtoReflect() protoreflect.Message {
	mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attach.ProtoReflect.Descriptor instead.
func (*Attach) Descriptor() ([]byte, []int) {
	return file_pb_grpc_pk_room_pk_room_proto_rawDescGZIP(), []int{7}
}

func (x *Attach) GetRoomID() int64 {
	if x != nil {
		return x.RoomID
	}
	return 0
}

type ManualMatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnchorA int64 `protobuf:"varint,1,opt,name=anchorA,proto3" json:"anchorA,omitempty"`
	AnchorB int64 `protobuf:"varint,2,opt,name=anchorB,proto3" json:"anchorB,omitempty"`
}

func (x *ManualMatchReq) Reset() {
	*x = ManualMatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualMatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualMatchReq) ProtoMessage() {}

func (x *ManualMatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualMatchReq.ProtoReflect.Descriptor instead.
func (*ManualMatchReq) Descriptor() ([]byte, []int) {
	return file_pb_grpc_pk_room_pk_room_proto_rawDescGZIP(), []int{8}
}

func (x *ManualMatchReq) GetAnchorA() int64 {
	if x != nil {
		return x.AnchorA
	}
	return 0
}

func (x *ManualMatchReq) GetAnchorB() int64 {
	if x != nil {
		return x.AnchorB
	}
	return 0
}

type ManualMatchRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ManualMatchRsp) Reset() {
	*x = ManualMatchRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualMatchRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualMatchRsp) ProtoMessage() {}

func (x *ManualMatchRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_grpc_pk_room_pk_room_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualMatchRsp.ProtoReflect.Descriptor instead.
func (*ManualMatchRsp) Descriptor() ([]byte, []int) {
	return file_pb_grpc_pk_room_pk_room_proto_rawDescGZIP(), []int{9}
}

var File_pb_grpc_pk_room_pk_room_proto protoreflect.FileDescriptor

var file_pb_grpc_pk_room_pk_room_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x62, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f,
	0x6d, 0x2f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x70, 0x62, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d,
	0x1a, 0x11, 0x70, 0x62, 0x5f, 0x70, 0x75, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2f, 0x70, 0x6b, 0x5f, 0x72,
	0x6f, 0x6f, 0x6d, 0x2f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x46, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x50, 0x4b, 0x4f, 0x76, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x69, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x76, 0x69, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x5e, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x2f,
	0x0a, 0x06, 0x70, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x50, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x06, 0x70, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x6b, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x6b, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x73, 0x70, 0x22, 0x81,
	0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6b, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6b, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x61, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x62, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x73, 0x70, 0x22, 0x2f, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x6b, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x6b, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x73, 0x70, 0x22,
	0x20, 0x0a, 0x06, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x22, 0x44, 0x0a, 0x0e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x41, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x41, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x42, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x42, 0x22, 0x10, 0x0a, 0x0e, 0x4d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x73, 0x70, 0x32, 0xf2, 0x05, 0x0a, 0x06, 0x50, 0x4b,
	0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x33, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61,
	0x74, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x70, 0x75, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x42, 0x65, 0x61, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x70, 0x75, 0x62, 0x2e, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x09, 0x50, 0x4b, 0x45,
	0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f,
	0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x4b, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x70, 0x6b,
	0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x4b, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x09, 0x50, 0x4b, 0x44, 0x65, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x70, 0x6b, 0x5f, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x50, 0x4b, 0x44, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d,
	0x2e, 0x50, 0x4b, 0x44, 0x65, 0x71, 0x75, 0x65, 0x75, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x08, 0x50, 0x4b, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x62,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x4b, 0x45,
	0x73, 0x63, 0x61, 0x70, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x4b, 0x45, 0x73, 0x63, 0x61,
	0x70, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x08, 0x50, 0x4b, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x70, 0x6b, 0x5f,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x4b, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x50, 0x4b, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x08, 0x50, 0x4b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x62,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x4b, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x4b, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0c, 0x50, 0x4b, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x4b, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x4b, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x22, 0x2e,
	0x70, 0x62, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x70, 0x62, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x6b, 0x5f, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0b, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x70,
	0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f,
	0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0f, 0x50, 0x4b, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x5f, 0x6d,
	0x73, 0x67, 0x5f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x50, 0x4b, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e,
	0x70, 0x62, 0x5f, 0x70, 0x75, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x52, 0x73, 0x70, 0x42, 0x29,
	0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x61,
	0x6c, 0x6c, 0x65, 0x65, 0x30, 0x30, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x62, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x70, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_pb_grpc_pk_room_pk_room_proto_rawDescOnce sync.Once
	file_pb_grpc_pk_room_pk_room_proto_rawDescData = file_pb_grpc_pk_room_pk_room_proto_rawDesc
)

func file_pb_grpc_pk_room_pk_room_proto_rawDescGZIP() []byte {
	file_pb_grpc_pk_room_pk_room_proto_rawDescOnce.Do(func() {
		file_pb_grpc_pk_room_pk_room_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_grpc_pk_room_pk_room_proto_rawDescData)
	})
	return file_pb_grpc_pk_room_pk_room_proto_rawDescData
}

var file_pb_grpc_pk_room_pk_room_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pb_grpc_pk_room_pk_room_proto_goTypes = []interface{}{
	(*FieldsPKOver)(nil),               // 0: pb_grpc_pk_room.FieldsPKOver
	(*CreateRandRoomReq)(nil),          // 1: pb_grpc_pk_room.CreateRandRoomReq
	(*CreateRandRoomRsp)(nil),          // 2: pb_grpc_pk_room.CreateRandRoomRsp
	(*CreateRankRoomReq)(nil),          // 3: pb_grpc_pk_room.CreateRankRoomReq
	(*CreateRankRoomRsp)(nil),          // 4: pb_grpc_pk_room.CreateRankRoomRsp
	(*CreateInviteRoomReq)(nil),        // 5: pb_grpc_pk_room.CreateInviteRoomReq
	(*CreateInviteRoomRsp)(nil),        // 6: pb_grpc_pk_room.CreateInviteRoomRsp
	(*Attach)(nil),                     // 7: pb_grpc_pk_room.Attach
	(*ManualMatchReq)(nil),             // 8: pb_grpc_pk_room.ManualMatchReq
	(*ManualMatchRsp)(nil),             // 9: pb_grpc_pk_room.ManualMatchRsp
	(pk_room.PK_TYPE)(0),               // 10: pb_msg_pk_room.PK_TYPE
	(*pb_pub.HeartBeat)(nil),           // 11: pb_pub.HeartBeat
	(*pk_room.PKEnqueueReq)(nil),       // 12: pb_msg_pk_room.PKEnqueueReq
	(*pk_room.PKDequeueReq)(nil),       // 13: pb_msg_pk_room.PKDequeueReq
	(*pk_room.PKEscapeReq)(nil),        // 14: pb_msg_pk_room.PKEscapeReq
	(*pk_room.PKAnswerReq)(nil),        // 15: pb_msg_pk_room.PKAnswerReq
	(*pk_room.PKInviteReq)(nil),        // 16: pb_msg_pk_room.PKInviteReq
	(*pk_room.PKInviteStopReq)(nil),    // 17: pb_msg_pk_room.PKInviteStopReq
	(*pk_room.PKSwitchPassiveReq)(nil), // 18: pb_msg_pk_room.PKSwitchPassiveReq
	(*pk_room.PKEnqueueRsp)(nil),       // 19: pb_msg_pk_room.PKEnqueueRsp
	(*pk_room.PKDequeueRsp)(nil),       // 20: pb_msg_pk_room.PKDequeueRsp
	(*pk_room.PKEscapeRsp)(nil),        // 21: pb_msg_pk_room.PKEscapeRsp
	(*pk_room.PKAnswerRsp)(nil),        // 22: pb_msg_pk_room.PKAnswerRsp
	(*pk_room.PKInviteRsp)(nil),        // 23: pb_msg_pk_room.PKInviteRsp
	(*pk_room.PKInviteStopRsp)(nil),    // 24: pb_msg_pk_room.PKInviteStopRsp
	(*pb_pub.CommRsp)(nil),             // 25: pb_pub.CommRsp
}
var file_pb_grpc_pk_room_pk_room_proto_depIdxs = []int32{
	10, // 0: pb_grpc_pk_room.CreateRandRoomReq.pkType:type_name -> pb_msg_pk_room.PK_TYPE
	11, // 1: pb_grpc_pk_room.PKRoom.HeartBeat:input_type -> pb_pub.HeartBeat
	12, // 2: pb_grpc_pk_room.PKRoom.PKEnqueue:input_type -> pb_msg_pk_room.PKEnqueueReq
	13, // 3: pb_grpc_pk_room.PKRoom.PKDequeue:input_type -> pb_msg_pk_room.PKDequeueReq
	14, // 4: pb_grpc_pk_room.PKRoom.PKEscape:input_type -> pb_msg_pk_room.PKEscapeReq
	15, // 5: pb_grpc_pk_room.PKRoom.PKAnswer:input_type -> pb_msg_pk_room.PKAnswerReq
	16, // 6: pb_grpc_pk_room.PKRoom.PKInvite:input_type -> pb_msg_pk_room.PKInviteReq
	17, // 7: pb_grpc_pk_room.PKRoom.PKInviteStop:input_type -> pb_msg_pk_room.PKInviteStopReq
	1,  // 8: pb_grpc_pk_room.PKRoom.CreateRandRoom:input_type -> pb_grpc_pk_room.CreateRandRoomReq
	8,  // 9: pb_grpc_pk_room.PKRoom.ManualMatch:input_type -> pb_grpc_pk_room.ManualMatchReq
	18, // 10: pb_grpc_pk_room.PKRoom.PKSwitchPassive:input_type -> pb_msg_pk_room.PKSwitchPassiveReq
	11, // 11: pb_grpc_pk_room.PKRoom.HeartBeat:output_type -> pb_pub.HeartBeat
	19, // 12: pb_grpc_pk_room.PKRoom.PKEnqueue:output_type -> pb_msg_pk_room.PKEnqueueRsp
	20, // 13: pb_grpc_pk_room.PKRoom.PKDequeue:output_type -> pb_msg_pk_room.PKDequeueRsp
	21, // 14: pb_grpc_pk_room.PKRoom.PKEscape:output_type -> pb_msg_pk_room.PKEscapeRsp
	22, // 15: pb_grpc_pk_room.PKRoom.PKAnswer:output_type -> pb_msg_pk_room.PKAnswerRsp
	23, // 16: pb_grpc_pk_room.PKRoom.PKInvite:output_type -> pb_msg_pk_room.PKInviteRsp
	24, // 17: pb_grpc_pk_room.PKRoom.PKInviteStop:output_type -> pb_msg_pk_room.PKInviteStopRsp
	2,  // 18: pb_grpc_pk_room.PKRoom.CreateRandRoom:output_type -> pb_grpc_pk_room.CreateRandRoomRsp
	9,  // 19: pb_grpc_pk_room.PKRoom.ManualMatch:output_type -> pb_grpc_pk_room.ManualMatchRsp
	25, // 20: pb_grpc_pk_room.PKRoom.PKSwitchPassive:output_type -> pb_pub.CommRsp
	11, // [11:21] is the sub-list for method output_type
	1,  // [1:11] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_pb_grpc_pk_room_pk_room_proto_init() }
func file_pb_grpc_pk_room_pk_room_proto_init() {
	if File_pb_grpc_pk_room_pk_room_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_grpc_pk_room_pk_room_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldsPKOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_grpc_pk_room_pk_room_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRandRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_grpc_pk_room_pk_room_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRandRoomRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_grpc_pk_room_pk_room_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRankRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_grpc_pk_room_pk_room_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRankRoomRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_grpc_pk_room_pk_room_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInviteRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_grpc_pk_room_pk_room_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInviteRoomRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_grpc_pk_room_pk_room_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attach); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_grpc_pk_room_pk_room_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualMatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_grpc_pk_room_pk_room_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualMatchRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_grpc_pk_room_pk_room_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_grpc_pk_room_pk_room_proto_goTypes,
		DependencyIndexes: file_pb_grpc_pk_room_pk_room_proto_depIdxs,
		MessageInfos:      file_pb_grpc_pk_room_pk_room_proto_msgTypes,
	}.Build()
	File_pb_grpc_pk_room_pk_room_proto = out.File
	file_pb_grpc_pk_room_pk_room_proto_rawDesc = nil
	file_pb_grpc_pk_room_pk_room_proto_goTypes = nil
	file_pb_grpc_pk_room_pk_room_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PKRoomClient is the client API for PKRoom service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PKRoomClient interface {
	HeartBeat(ctx context.Context, in *pb_pub.HeartBeat, opts ...grpc.CallOption) (*pb_pub.HeartBeat, error)
	PKEnqueue(ctx context.Context, in *pk_room.PKEnqueueReq, opts ...grpc.CallOption) (*pk_room.PKEnqueueRsp, error)
	PKDequeue(ctx context.Context, in *pk_room.PKDequeueReq, opts ...grpc.CallOption) (*pk_room.PKDequeueRsp, error)
	PKEscape(ctx context.Context, in *pk_room.PKEscapeReq, opts ...grpc.CallOption) (*pk_room.PKEscapeRsp, error)
	PKAnswer(ctx context.Context, in *pk_room.PKAnswerReq, opts ...grpc.CallOption) (*pk_room.PKAnswerRsp, error)
	PKInvite(ctx context.Context, in *pk_room.PKInviteReq, opts ...grpc.CallOption) (*pk_room.PKInviteRsp, error)
	PKInviteStop(ctx context.Context, in *pk_room.PKInviteStopReq, opts ...grpc.CallOption) (*pk_room.PKInviteStopRsp, error)
	CreateRandRoom(ctx context.Context, in *CreateRandRoomReq, opts ...grpc.CallOption) (*CreateRandRoomRsp, error)
	ManualMatch(ctx context.Context, in *ManualMatchReq, opts ...grpc.CallOption) (*ManualMatchRsp, error)
	PKSwitchPassive(ctx context.Context, in *pk_room.PKSwitchPassiveReq, opts ...grpc.CallOption) (*pb_pub.CommRsp, error)
}

type pKRoomClient struct {
	cc grpc.ClientConnInterface
}

func NewPKRoomClient(cc grpc.ClientConnInterface) PKRoomClient {
	return &pKRoomClient{cc}
}

func (c *pKRoomClient) HeartBeat(ctx context.Context, in *pb_pub.HeartBeat, opts ...grpc.CallOption) (*pb_pub.HeartBeat, error) {
	out := new(pb_pub.HeartBeat)
	err := c.cc.Invoke(ctx, "/pb_grpc_pk_room.PKRoom/HeartBeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pKRoomClient) PKEnqueue(ctx context.Context, in *pk_room.PKEnqueueReq, opts ...grpc.CallOption) (*pk_room.PKEnqueueRsp, error) {
	out := new(pk_room.PKEnqueueRsp)
	err := c.cc.Invoke(ctx, "/pb_grpc_pk_room.PKRoom/PKEnqueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pKRoomClient) PKDequeue(ctx context.Context, in *pk_room.PKDequeueReq, opts ...grpc.CallOption) (*pk_room.PKDequeueRsp, error) {
	out := new(pk_room.PKDequeueRsp)
	err := c.cc.Invoke(ctx, "/pb_grpc_pk_room.PKRoom/PKDequeue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pKRoomClient) PKEscape(ctx context.Context, in *pk_room.PKEscapeReq, opts ...grpc.CallOption) (*pk_room.PKEscapeRsp, error) {
	out := new(pk_room.PKEscapeRsp)
	err := c.cc.Invoke(ctx, "/pb_grpc_pk_room.PKRoom/PKEscape", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pKRoomClient) PKAnswer(ctx context.Context, in *pk_room.PKAnswerReq, opts ...grpc.CallOption) (*pk_room.PKAnswerRsp, error) {
	out := new(pk_room.PKAnswerRsp)
	err := c.cc.Invoke(ctx, "/pb_grpc_pk_room.PKRoom/PKAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pKRoomClient) PKInvite(ctx context.Context, in *pk_room.PKInviteReq, opts ...grpc.CallOption) (*pk_room.PKInviteRsp, error) {
	out := new(pk_room.PKInviteRsp)
	err := c.cc.Invoke(ctx, "/pb_grpc_pk_room.PKRoom/PKInvite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pKRoomClient) PKInviteStop(ctx context.Context, in *pk_room.PKInviteStopReq, opts ...grpc.CallOption) (*pk_room.PKInviteStopRsp, error) {
	out := new(pk_room.PKInviteStopRsp)
	err := c.cc.Invoke(ctx, "/pb_grpc_pk_room.PKRoom/PKInviteStop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pKRoomClient) CreateRandRoom(ctx context.Context, in *CreateRandRoomReq, opts ...grpc.CallOption) (*CreateRandRoomRsp, error) {
	out := new(CreateRandRoomRsp)
	err := c.cc.Invoke(ctx, "/pb_grpc_pk_room.PKRoom/CreateRandRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pKRoomClient) ManualMatch(ctx context.Context, in *ManualMatchReq, opts ...grpc.CallOption) (*ManualMatchRsp, error) {
	out := new(ManualMatchRsp)
	err := c.cc.Invoke(ctx, "/pb_grpc_pk_room.PKRoom/ManualMatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pKRoomClient) PKSwitchPassive(ctx context.Context, in *pk_room.PKSwitchPassiveReq, opts ...grpc.CallOption) (*pb_pub.CommRsp, error) {
	out := new(pb_pub.CommRsp)
	err := c.cc.Invoke(ctx, "/pb_grpc_pk_room.PKRoom/PKSwitchPassive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PKRoomServer is the server API for PKRoom service.
type PKRoomServer interface {
	HeartBeat(context.Context, *pb_pub.HeartBeat) (*pb_pub.HeartBeat, error)
	PKEnqueue(context.Context, *pk_room.PKEnqueueReq) (*pk_room.PKEnqueueRsp, error)
	PKDequeue(context.Context, *pk_room.PKDequeueReq) (*pk_room.PKDequeueRsp, error)
	PKEscape(context.Context, *pk_room.PKEscapeReq) (*pk_room.PKEscapeRsp, error)
	PKAnswer(context.Context, *pk_room.PKAnswerReq) (*pk_room.PKAnswerRsp, error)
	PKInvite(context.Context, *pk_room.PKInviteReq) (*pk_room.PKInviteRsp, error)
	PKInviteStop(context.Context, *pk_room.PKInviteStopReq) (*pk_room.PKInviteStopRsp, error)
	CreateRandRoom(context.Context, *CreateRandRoomReq) (*CreateRandRoomRsp, error)
	ManualMatch(context.Context, *ManualMatchReq) (*ManualMatchRsp, error)
	PKSwitchPassive(context.Context, *pk_room.PKSwitchPassiveReq) (*pb_pub.CommRsp, error)
}

// UnimplementedPKRoomServer can be embedded to have forward compatible implementations.
type UnimplementedPKRoomServer struct {
}

func (*UnimplementedPKRoomServer) HeartBeat(context.Context, *pb_pub.HeartBeat) (*pb_pub.HeartBeat, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HeartBeat not implemented")
}
func (*UnimplementedPKRoomServer) PKEnqueue(context.Context, *pk_room.PKEnqueueReq) (*pk_room.PKEnqueueRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PKEnqueue not implemented")
}
func (*UnimplementedPKRoomServer) PKDequeue(context.Context, *pk_room.PKDequeueReq) (*pk_room.PKDequeueRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PKDequeue not implemented")
}
func (*UnimplementedPKRoomServer) PKEscape(context.Context, *pk_room.PKEscapeReq) (*pk_room.PKEscapeRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PKEscape not implemented")
}
func (*UnimplementedPKRoomServer) PKAnswer(context.Context, *pk_room.PKAnswerReq) (*pk_room.PKAnswerRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PKAnswer not implemented")
}
func (*UnimplementedPKRoomServer) PKInvite(context.Context, *pk_room.PKInviteReq) (*pk_room.PKInviteRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PKInvite not implemented")
}
func (*UnimplementedPKRoomServer) PKInviteStop(context.Context, *pk_room.PKInviteStopReq) (*pk_room.PKInviteStopRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PKInviteStop not implemented")
}
func (*UnimplementedPKRoomServer) CreateRandRoom(context.Context, *CreateRandRoomReq) (*CreateRandRoomRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRandRoom not implemented")
}
func (*UnimplementedPKRoomServer) ManualMatch(context.Context, *ManualMatchReq) (*ManualMatchRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManualMatch not implemented")
}
func (*UnimplementedPKRoomServer) PKSwitchPassive(context.Context, *pk_room.PKSwitchPassiveReq) (*pb_pub.CommRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PKSwitchPassive not implemented")
}

func RegisterPKRoomServer(s *grpc.Server, srv PKRoomServer) {
	s.RegisterService(&_PKRoom_serviceDesc, srv)
}

func _PKRoom_HeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(pb_pub.HeartBeat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PKRoomServer).HeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_grpc_pk_room.PKRoom/HeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PKRoomServer).HeartBeat(ctx, req.(*pb_pub.HeartBeat))
	}
	return interceptor(ctx, in, info, handler)
}

func _PKRoom_PKEnqueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(pk_room.PKEnqueueReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PKRoomServer).PKEnqueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_grpc_pk_room.PKRoom/PKEnqueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PKRoomServer).PKEnqueue(ctx, req.(*pk_room.PKEnqueueReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PKRoom_PKDequeue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(pk_room.PKDequeueReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PKRoomServer).PKDequeue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_grpc_pk_room.PKRoom/PKDequeue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PKRoomServer).PKDequeue(ctx, req.(*pk_room.PKDequeueReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PKRoom_PKEscape_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(pk_room.PKEscapeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PKRoomServer).PKEscape(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_grpc_pk_room.PKRoom/PKEscape",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PKRoomServer).PKEscape(ctx, req.(*pk_room.PKEscapeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PKRoom_PKAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(pk_room.PKAnswerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PKRoomServer).PKAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_grpc_pk_room.PKRoom/PKAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PKRoomServer).PKAnswer(ctx, req.(*pk_room.PKAnswerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PKRoom_PKInvite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(pk_room.PKInviteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PKRoomServer).PKInvite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_grpc_pk_room.PKRoom/PKInvite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PKRoomServer).PKInvite(ctx, req.(*pk_room.PKInviteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PKRoom_PKInviteStop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(pk_room.PKInviteStopReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PKRoomServer).PKInviteStop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_grpc_pk_room.PKRoom/PKInviteStop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PKRoomServer).PKInviteStop(ctx, req.(*pk_room.PKInviteStopReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PKRoom_CreateRandRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRandRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PKRoomServer).CreateRandRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_grpc_pk_room.PKRoom/CreateRandRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PKRoomServer).CreateRandRoom(ctx, req.(*CreateRandRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PKRoom_ManualMatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ManualMatchReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PKRoomServer).ManualMatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_grpc_pk_room.PKRoom/ManualMatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PKRoomServer).ManualMatch(ctx, req.(*ManualMatchReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PKRoom_PKSwitchPassive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(pk_room.PKSwitchPassiveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PKRoomServer).PKSwitchPassive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb_grpc_pk_room.PKRoom/PKSwitchPassive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PKRoomServer).PKSwitchPassive(ctx, req.(*pk_room.PKSwitchPassiveReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PKRoom_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb_grpc_pk_room.PKRoom",
	HandlerType: (*PKRoomServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HeartBeat",
			Handler:    _PKRoom_HeartBeat_Handler,
		},
		{
			MethodName: "PKEnqueue",
			Handler:    _PKRoom_PKEnqueue_Handler,
		},
		{
			MethodName: "PKDequeue",
			Handler:    _PKRoom_PKDequeue_Handler,
		},
		{
			MethodName: "PKEscape",
			Handler:    _PKRoom_PKEscape_Handler,
		},
		{
			MethodName: "PKAnswer",
			Handler:    _PKRoom_PKAnswer_Handler,
		},
		{
			MethodName: "PKInvite",
			Handler:    _PKRoom_PKInvite_Handler,
		},
		{
			MethodName: "PKInviteStop",
			Handler:    _PKRoom_PKInviteStop_Handler,
		},
		{
			MethodName: "CreateRandRoom",
			Handler:    _PKRoom_CreateRandRoom_Handler,
		},
		{
			MethodName: "ManualMatch",
			Handler:    _PKRoom_ManualMatch_Handler,
		},
		{
			MethodName: "PKSwitchPassive",
			Handler:    _PKRoom_PKSwitchPassive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb_grpc/pk_room/pk_room.proto",
}
