// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.15.5
// source: pb_nats/opera_log/opera_log.proto

package opera_log

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize       int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Keyword        string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
	OperaObj       string `protobuf:"bytes,4,opt,name=opera_obj,json=operaObj,proto3" json:"opera_obj,omitempty"`
	OperaType      string `protobuf:"bytes,5,opt,name=opera_type,json=operaType,proto3" json:"opera_type,omitempty"`
	OperaModule    string `protobuf:"bytes,6,opt,name=opera_module,json=operaModule,proto3" json:"opera_module,omitempty"`
	OperaName      string `protobuf:"bytes,7,opt,name=opera_name,json=operaName,proto3" json:"opera_name,omitempty"`
	OperaTimeStart string `protobuf:"bytes,8,opt,name=opera_time_start,json=operaTimeStart,proto3" json:"opera_time_start,omitempty"`
	OperaTimeEnd   string `protobuf:"bytes,9,opt,name=opera_time_end,json=operaTimeEnd,proto3" json:"opera_time_end,omitempty"`
}

func (x *GetLogReq) Reset() {
	*x = GetLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nats_opera_log_opera_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogReq) ProtoMessage() {}

func (x *GetLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nats_opera_log_opera_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogReq.ProtoReflect.Descriptor instead.
func (*GetLogReq) Descriptor() ([]byte, []int) {
	return file_pb_nats_opera_log_opera_log_proto_rawDescGZIP(), []int{0}
}

func (x *GetLogReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetLogReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetLogReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetLogReq) GetOperaObj() string {
	if x != nil {
		return x.OperaObj
	}
	return ""
}

func (x *GetLogReq) GetOperaType() string {
	if x != nil {
		return x.OperaType
	}
	return ""
}

func (x *GetLogReq) GetOperaModule() string {
	if x != nil {
		return x.OperaModule
	}
	return ""
}

func (x *GetLogReq) GetOperaName() string {
	if x != nil {
		return x.OperaName
	}
	return ""
}

func (x *GetLogReq) GetOperaTimeStart() string {
	if x != nil {
		return x.OperaTimeStart
	}
	return ""
}

func (x *GetLogReq) GetOperaTimeEnd() string {
	if x != nil {
		return x.OperaTimeEnd
	}
	return ""
}

type GetLogRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32             `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string            `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Data         []*GetLogRep_Data `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLogRep) Reset() {
	*x = GetLogRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nats_opera_log_opera_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogRep) ProtoMessage() {}

func (x *GetLogRep) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nats_opera_log_opera_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogRep.ProtoReflect.Descriptor instead.
func (*GetLogRep) Descriptor() ([]byte, []int) {
	return file_pb_nats_opera_log_opera_log_proto_rawDescGZIP(), []int{1}
}

func (x *GetLogRep) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetLogRep) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetLogRep) GetData() []*GetLogRep_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetLogRep_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperaTime   string `protobuf:"bytes,1,opt,name=opera_time,json=operaTime,proto3" json:"opera_time,omitempty"`
	OperaName   string `protobuf:"bytes,2,opt,name=opera_name,json=operaName,proto3" json:"opera_name,omitempty"`
	OperaType   string `protobuf:"bytes,3,opt,name=opera_type,json=operaType,proto3" json:"opera_type,omitempty"`
	OperaModule string `protobuf:"bytes,4,opt,name=opera_module,json=operaModule,proto3" json:"opera_module,omitempty"`
	OperaObj    string `protobuf:"bytes,5,opt,name=opera_obj,json=operaObj,proto3" json:"opera_obj,omitempty"`
	Content     string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *GetLogRep_Data) Reset() {
	*x = GetLogRep_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_nats_opera_log_opera_log_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogRep_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogRep_Data) ProtoMessage() {}

func (x *GetLogRep_Data) ProtoReflect() protoreflect.Message {
	mi := &file_pb_nats_opera_log_opera_log_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogRep_Data.ProtoReflect.Descriptor instead.
func (*GetLogRep_Data) Descriptor() ([]byte, []int) {
	return file_pb_nats_opera_log_opera_log_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetLogRep_Data) GetOperaTime() string {
	if x != nil {
		return x.OperaTime
	}
	return ""
}

func (x *GetLogRep_Data) GetOperaName() string {
	if x != nil {
		return x.OperaName
	}
	return ""
}

func (x *GetLogRep_Data) GetOperaType() string {
	if x != nil {
		return x.OperaType
	}
	return ""
}

func (x *GetLogRep_Data) GetOperaModule() string {
	if x != nil {
		return x.OperaModule
	}
	return ""
}

func (x *GetLogRep_Data) GetOperaObj() string {
	if x != nil {
		return x.OperaObj
	}
	return ""
}

func (x *GetLogRep_Data) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_pb_nats_opera_log_opera_log_proto protoreflect.FileDescriptor

var file_pb_nats_opera_log_opera_log_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x62, 0x5f, 0x6e, 0x61, 0x74, 0x73, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x5f,
	0x6c, 0x6f, 0x67, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x4c, 0x6f, 0x67, 0x22, 0xa4, 0x02,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x5f,
	0x6f, 0x62, 0x6a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x4f, 0x62, 0x6a, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x22, 0xbd, 0x02, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x4c, 0x6f, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0xbd, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x6f, 0x62, 0x6a, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x4f, 0x62, 0x6a, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x32, 0x45, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x4c, 0x6f, 0x67,
	0x12, 0x39, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x4c, 0x6f, 0x67, 0x12,
	0x13, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x4c, 0x6f, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x4c, 0x6f, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x22, 0x00, 0x42, 0x1c, 0x5a, 0x1a, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x6c, 0x6f, 0x67, 0x3b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x5f, 0x6c, 0x6f, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_pb_nats_opera_log_opera_log_proto_rawDescOnce sync.Once
	file_pb_nats_opera_log_opera_log_proto_rawDescData = file_pb_nats_opera_log_opera_log_proto_rawDesc
)

func file_pb_nats_opera_log_opera_log_proto_rawDescGZIP() []byte {
	file_pb_nats_opera_log_opera_log_proto_rawDescOnce.Do(func() {
		file_pb_nats_opera_log_opera_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_nats_opera_log_opera_log_proto_rawDescData)
	})
	return file_pb_nats_opera_log_opera_log_proto_rawDescData
}

var file_pb_nats_opera_log_opera_log_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pb_nats_opera_log_opera_log_proto_goTypes = []interface{}{
	(*GetLogReq)(nil),      // 0: operaLog.GetLogReq
	(*GetLogRep)(nil),      // 1: operaLog.GetLogRep
	(*GetLogRep_Data)(nil), // 2: operaLog.GetLogRep.Data
}
var file_pb_nats_opera_log_opera_log_proto_depIdxs = []int32{
	2, // 0: operaLog.GetLogRep.data:type_name -> operaLog.GetLogRep.Data
	0, // 1: operaLog.OperaLog.GetOperaLog:input_type -> operaLog.GetLogReq
	1, // 2: operaLog.OperaLog.GetOperaLog:output_type -> operaLog.GetLogRep
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pb_nats_opera_log_opera_log_proto_init() }
func file_pb_nats_opera_log_opera_log_proto_init() {
	if File_pb_nats_opera_log_opera_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_nats_opera_log_opera_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nats_opera_log_opera_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_nats_opera_log_opera_log_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLogRep_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_nats_opera_log_opera_log_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_nats_opera_log_opera_log_proto_goTypes,
		DependencyIndexes: file_pb_nats_opera_log_opera_log_proto_depIdxs,
		MessageInfos:      file_pb_nats_opera_log_opera_log_proto_msgTypes,
	}.Build()
	File_pb_nats_opera_log_opera_log_proto = out.File
	file_pb_nats_opera_log_opera_log_proto_rawDesc = nil
	file_pb_nats_opera_log_opera_log_proto_goTypes = nil
	file_pb_nats_opera_log_opera_log_proto_depIdxs = nil
}
