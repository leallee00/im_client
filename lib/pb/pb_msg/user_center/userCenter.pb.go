// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.3
// source: pb_msg/user_center/userCenter.proto

package user_center

import (
	pb_pub "github.com/leallee00/pb/pb_pub"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ///////////////////////////////////
// 红包
// 发红包
type GrantScene int32

const (
	GrantScene_PrivateChat GrantScene = 0 // 私聊
	GrantScene_GroupChat   GrantScene = 1 // 群聊
)

// Enum value maps for GrantScene.
var (
	GrantScene_name = map[int32]string{
		0: "PrivateChat",
		1: "GroupChat",
	}
	GrantScene_value = map[string]int32{
		"PrivateChat": 0,
		"GroupChat":   1,
	}
)

func (x GrantScene) Enum() *GrantScene {
	p := new(GrantScene)
	*p = x
	return p
}

func (x GrantScene) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GrantScene) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_msg_user_center_userCenter_proto_enumTypes[0].Descriptor()
}

func (GrantScene) Type() protoreflect.EnumType {
	return &file_pb_msg_user_center_userCenter_proto_enumTypes[0]
}

func (x GrantScene) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GrantScene.Descriptor instead.
func (GrantScene) EnumDescriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{0}
}

type GroupRedPacketType int32

const (
	GroupRedPacketType_Lucky   GroupRedPacketType = 0 // 拼手气
	GroupRedPacketType_Average GroupRedPacketType = 1 // 平均分配
)

// Enum value maps for GroupRedPacketType.
var (
	GroupRedPacketType_name = map[int32]string{
		0: "Lucky",
		1: "Average",
	}
	GroupRedPacketType_value = map[string]int32{
		"Lucky":   0,
		"Average": 1,
	}
)

func (x GroupRedPacketType) Enum() *GroupRedPacketType {
	p := new(GroupRedPacketType)
	*p = x
	return p
}

func (x GroupRedPacketType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupRedPacketType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_msg_user_center_userCenter_proto_enumTypes[1].Descriptor()
}

func (GroupRedPacketType) Type() protoreflect.EnumType {
	return &file_pb_msg_user_center_userCenter_proto_enumTypes[1]
}

func (x GroupRedPacketType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupRedPacketType.Descriptor instead.
func (GroupRedPacketType) EnumDescriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{1}
}

type RedPacketStatus int32

const (
	RedPacketStatus_Edit      RedPacketStatus = 0 // 编辑
	RedPacketStatus_Going     RedPacketStatus = 1 // 发放中
	RedPacketStatus_Completed RedPacketStatus = 2 // 领完了
	RedPacketStatus_Overtime  RedPacketStatus = 3 // 超时未领完,待退款
	RedPacketStatus_Refunded  RedPacketStatus = 4 // 已退还
)

// Enum value maps for RedPacketStatus.
var (
	RedPacketStatus_name = map[int32]string{
		0: "Edit",
		1: "Going",
		2: "Completed",
		3: "Overtime",
		4: "Refunded",
	}
	RedPacketStatus_value = map[string]int32{
		"Edit":      0,
		"Going":     1,
		"Completed": 2,
		"Overtime":  3,
		"Refunded":  4,
	}
)

func (x RedPacketStatus) Enum() *RedPacketStatus {
	p := new(RedPacketStatus)
	*p = x
	return p
}

func (x RedPacketStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RedPacketStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_msg_user_center_userCenter_proto_enumTypes[2].Descriptor()
}

func (RedPacketStatus) Type() protoreflect.EnumType {
	return &file_pb_msg_user_center_userCenter_proto_enumTypes[2]
}

func (x RedPacketStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RedPacketStatus.Descriptor instead.
func (RedPacketStatus) EnumDescriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{2}
}

// 是否需要这个结构
type FriendInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendUserIds []int64 `protobuf:"varint,1,rep,packed,name=friendUserIds,proto3" json:"friendUserIds,omitempty"` //接受一个id 的列表
}

func (x *FriendInfoReq) Reset() {
	*x = FriendInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfoReq) ProtoMessage() {}

func (x *FriendInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfoReq.ProtoReflect.Descriptor instead.
func (*FriendInfoReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{0}
}

func (x *FriendInfoReq) GetFriendUserIds() []int64 {
	if x != nil {
		return x.FriendUserIds
	}
	return nil
}

type FriendInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*FriendInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // 返回结果顺序和请求id 顺序一致,如果用户信息不存在，那FriendInfo 中除UserId外其他字段均为零值
}

func (x *FriendInfoRsp) Reset() {
	*x = FriendInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfoRsp) ProtoMessage() {}

func (x *FriendInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfoRsp.ProtoReflect.Descriptor instead.
func (*FriendInfoRsp) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{1}
}

func (x *FriendInfoRsp) GetResults() []*FriendInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

// 这个就是取用户信息，如果取自己的信息就到uaa去取
type UsersInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64 `protobuf:"varint,1,rep,packed,name=UserIds,proto3" json:"UserIds,omitempty"` //接受一个id 的列表
}

func (x *UsersInfoReq) Reset() {
	*x = UsersInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersInfoReq) ProtoMessage() {}

func (x *UsersInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersInfoReq.ProtoReflect.Descriptor instead.
func (*UsersInfoReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{2}
}

func (x *UsersInfoReq) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type UsersInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*UsersInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // 返回结果顺序和请求id 顺序一致,如果用户信息不存在，那FriendInfo 中除UserId外其他字段均为零值
}

func (x *UsersInfoRsp) Reset() {
	*x = UsersInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersInfoRsp) ProtoMessage() {}

func (x *UsersInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersInfoRsp.ProtoReflect.Descriptor instead.
func (*UsersInfoRsp) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{3}
}

func (x *UsersInfoRsp) GetResults() []*UsersInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

type UsersInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId              int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`                            // 用户id,imid
	AppUserId           string                 `protobuf:"bytes,2,opt,name=appUserId,proto3" json:"appUserId,omitempty"`                       //  用户在注册app上的用户id
	AppId               int64                  `protobuf:"varint,3,opt,name=appId,proto3" json:"appId,omitempty"`                              // 注册的app 在im系统中注册的id
	RegisterApp         string                 `protobuf:"bytes,4,opt,name=registerApp,proto3" json:"registerApp,omitempty"`                   //注册的app名称，通过那个app注册的
	Gender              string                 `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`                             // 性别
	HeaderImageOriginal string                 `protobuf:"bytes,6,opt,name=headerImageOriginal,proto3" json:"headerImageOriginal,omitempty"`   // 用户头像url
	UserLevel           string                 `protobuf:"bytes,7,opt,name=userLevel,proto3" json:"userLevel,omitempty"`                       // 用户等级
	AuthAccess          string                 `protobuf:"bytes,8,opt,name=authAccess,proto3" json:"authAccess,omitempty"`                     // 实名认证是否通过
	NickName            string                 `protobuf:"bytes,9,opt,name=nickName,proto3" json:"nickName,omitempty"`                         // 昵称
	Sign                string                 `protobuf:"bytes,10,opt,name=sign,proto3" json:"sign,omitempty"`                                // 用户签名
	ActorGrade          int32                  `protobuf:"varint,11,opt,name=actorGrade,proto3" json:"actorGrade,omitempty"`                   // 主播等级
	Role                int32                  `protobuf:"varint,12,opt,name=role,proto3" json:"role,omitempty"`                               //  角色
	Banned              bool                   `protobuf:"varint,13,opt,name=banned,proto3" json:"banned,omitempty"`                           //是否封禁
	MemberFlag          int32                  `protobuf:"varint,14,opt,name=memberFlag,proto3" json:"memberFlag,omitempty"`                   // 成员标识
	BigImageOriginal    string                 `protobuf:"bytes,15,opt,name=bigImageOriginal,proto3" json:"bigImageOriginal,omitempty"`        // 背景大图链接
	UserSourceVersion   int32                  `protobuf:"varint,16,opt,name=userSourceVersion,proto3" json:"userSourceVersion,omitempty"`     // 用户信息版本号，用户每改一次信息版本号+1
	State               pb_pub.USER_STATE_TYPE `protobuf:"varint,17,opt,name=State,proto3,enum=pb_pub.USER_STATE_TYPE" json:"State,omitempty"` // 用户在线状态
	FreeAddMeFriend     bool                   `protobuf:"varint,18,opt,name=freeAddMeFriend,proto3" json:"freeAddMeFriend,omitempty"`         //是否开启不确认加好友，自由加好友
	Status              int32                  `protobuf:"varint,19,opt,name=status,proto3" json:"status,omitempty"`                           // 0:正常 10:注销
}

func (x *UsersInfo) Reset() {
	*x = UsersInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersInfo) ProtoMessage() {}

func (x *UsersInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersInfo.ProtoReflect.Descriptor instead.
func (*UsersInfo) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{4}
}

func (x *UsersInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UsersInfo) GetAppUserId() string {
	if x != nil {
		return x.AppUserId
	}
	return ""
}

func (x *UsersInfo) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *UsersInfo) GetRegisterApp() string {
	if x != nil {
		return x.RegisterApp
	}
	return ""
}

func (x *UsersInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UsersInfo) GetHeaderImageOriginal() string {
	if x != nil {
		return x.HeaderImageOriginal
	}
	return ""
}

func (x *UsersInfo) GetUserLevel() string {
	if x != nil {
		return x.UserLevel
	}
	return ""
}

func (x *UsersInfo) GetAuthAccess() string {
	if x != nil {
		return x.AuthAccess
	}
	return ""
}

func (x *UsersInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UsersInfo) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *UsersInfo) GetActorGrade() int32 {
	if x != nil {
		return x.ActorGrade
	}
	return 0
}

func (x *UsersInfo) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *UsersInfo) GetBanned() bool {
	if x != nil {
		return x.Banned
	}
	return false
}

func (x *UsersInfo) GetMemberFlag() int32 {
	if x != nil {
		return x.MemberFlag
	}
	return 0
}

func (x *UsersInfo) GetBigImageOriginal() string {
	if x != nil {
		return x.BigImageOriginal
	}
	return ""
}

func (x *UsersInfo) GetUserSourceVersion() int32 {
	if x != nil {
		return x.UserSourceVersion
	}
	return 0
}

func (x *UsersInfo) GetState() pb_pub.USER_STATE_TYPE {
	if x != nil {
		return x.State
	}
	return pb_pub.USER_STATE_TYPE(0)
}

func (x *UsersInfo) GetFreeAddMeFriend() bool {
	if x != nil {
		return x.FreeAddMeFriend
	}
	return false
}

func (x *UsersInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type FriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId              int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`                                                                                   // 用户id
	Gender              string                 `protobuf:"bytes,2,opt,name=gender,proto3" json:"gender,omitempty"`                                                                                    // 性别
	HeaderImageOriginal string                 `protobuf:"bytes,3,opt,name=headerImageOriginal,proto3" json:"headerImageOriginal,omitempty"`                                                          // 用户头像url
	UserLevel           string                 `protobuf:"bytes,4,opt,name=userLevel,proto3" json:"userLevel,omitempty"`                                                                              // 用户等级
	AuthAccess          string                 `protobuf:"bytes,5,opt,name=authAccess,proto3" json:"authAccess,omitempty"`                                                                            // 实名认证是否通过
	NickName            string                 `protobuf:"bytes,6,opt,name=nickName,proto3" json:"nickName,omitempty"`                                                                                // 昵称
	Sign                string                 `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign,omitempty"`                                                                                        // 用户签名
	ActorGrade          int32                  `protobuf:"varint,8,opt,name=actorGrade,proto3" json:"actorGrade,omitempty"`                                                                           // 主播等级
	PackageName         string                 `protobuf:"bytes,9,opt,name=packageName,proto3" json:"packageName,omitempty"`                                                                          // 包名
	SystemVersion       string                 `protobuf:"bytes,10,opt,name=systemVersion,proto3" json:"systemVersion,omitempty"`                                                                     // 手机操作系统版本号    12.2
	PhoneModels         string                 `protobuf:"bytes,11,opt,name=phoneModels,proto3" json:"phoneModels,omitempty"`                                                                         // 手机型号             iPhone 7
	AppVersion          string                 `protobuf:"bytes,12,opt,name=appVersion,proto3" json:"appVersion,omitempty"`                                                                           // 椰趣版本号           2.2.5/debug2.5.6(build256)
	SystemName          string                 `protobuf:"bytes,13,opt,name=systemName,proto3" json:"systemName,omitempty"`                                                                           //                     android/iOS
	Identifier          string                 `protobuf:"bytes,14,opt,name=identifier,proto3" json:"identifier,omitempty"`                                                                           // 手机设备号
	UserState           pb_pub.USER_STATE_TYPE `protobuf:"varint,15,opt,name=userState,proto3,enum=pb_pub.USER_STATE_TYPE" json:"userState,omitempty"`                                                // 用户在线状态
	SwitchToBack        bool                   `protobuf:"varint,16,opt,name=switchToBack,proto3" json:"switchToBack,omitempty"`                                                                      //是否至后台
	UpdateTime          int64                  `protobuf:"varint,17,opt,name=updateTime,proto3" json:"updateTime,omitempty"`                                                                          //用户状态更新时间
	Exp                 map[string]string      `protobuf:"bytes,18,rep,name=exp,proto3" json:"exp,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 扩展参数
	AppId               int64                  `protobuf:"varint,19,opt,name=appId,proto3" json:"appId,omitempty"`
	AppUserId           string                 `protobuf:"bytes,20,opt,name=appUserId,proto3" json:"appUserId,omitempty"`
	ModelType           pb_pub.MODEL_TYPE      `protobuf:"varint,21,opt,name=modelType,proto3,enum=pb_pub.MODEL_TYPE" json:"modelType,omitempty"` // 推送厂商类型
	UserSourceVersion   int32                  `protobuf:"varint,22,opt,name=userSourceVersion,proto3" json:"userSourceVersion,omitempty"`        //用户资源版本号
	Status              int32                  `protobuf:"varint,23,opt,name=status,proto3" json:"status,omitempty"`                              // 0:正常 10:注销
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{5}
}

func (x *FriendInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FriendInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *FriendInfo) GetHeaderImageOriginal() string {
	if x != nil {
		return x.HeaderImageOriginal
	}
	return ""
}

func (x *FriendInfo) GetUserLevel() string {
	if x != nil {
		return x.UserLevel
	}
	return ""
}

func (x *FriendInfo) GetAuthAccess() string {
	if x != nil {
		return x.AuthAccess
	}
	return ""
}

func (x *FriendInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *FriendInfo) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *FriendInfo) GetActorGrade() int32 {
	if x != nil {
		return x.ActorGrade
	}
	return 0
}

func (x *FriendInfo) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *FriendInfo) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *FriendInfo) GetPhoneModels() string {
	if x != nil {
		return x.PhoneModels
	}
	return ""
}

func (x *FriendInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *FriendInfo) GetSystemName() string {
	if x != nil {
		return x.SystemName
	}
	return ""
}

func (x *FriendInfo) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *FriendInfo) GetUserState() pb_pub.USER_STATE_TYPE {
	if x != nil {
		return x.UserState
	}
	return pb_pub.USER_STATE_TYPE(0)
}

func (x *FriendInfo) GetSwitchToBack() bool {
	if x != nil {
		return x.SwitchToBack
	}
	return false
}

func (x *FriendInfo) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *FriendInfo) GetExp() map[string]string {
	if x != nil {
		return x.Exp
	}
	return nil
}

func (x *FriendInfo) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *FriendInfo) GetAppUserId() string {
	if x != nil {
		return x.AppUserId
	}
	return ""
}

func (x *FriendInfo) GetModelType() pb_pub.MODEL_TYPE {
	if x != nil {
		return x.ModelType
	}
	return pb_pub.MODEL_TYPE(0)
}

func (x *FriendInfo) GetUserSourceVersion() int32 {
	if x != nil {
		return x.UserSourceVersion
	}
	return 0
}

func (x *FriendInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AppUidToImIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     int64  `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	AppUserId string `protobuf:"bytes,2,opt,name=appUserId,proto3" json:"appUserId,omitempty"`
}

func (x *AppUidToImIdReq) Reset() {
	*x = AppUidToImIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppUidToImIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppUidToImIdReq) ProtoMessage() {}

func (x *AppUidToImIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppUidToImIdReq.ProtoReflect.Descriptor instead.
func (*AppUidToImIdReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{6}
}

func (x *AppUidToImIdReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *AppUidToImIdReq) GetAppUserId() string {
	if x != nil {
		return x.AppUserId
	}
	return ""
}

type AppUidToImIdRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     int64  `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	UserId    int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	AppUserId string `protobuf:"bytes,3,opt,name=appUserId,proto3" json:"appUserId,omitempty"`
}

func (x *AppUidToImIdRsp) Reset() {
	*x = AppUidToImIdRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppUidToImIdRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppUidToImIdRsp) ProtoMessage() {}

func (x *AppUidToImIdRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppUidToImIdRsp.ProtoReflect.Descriptor instead.
func (*AppUidToImIdRsp) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{7}
}

func (x *AppUidToImIdRsp) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *AppUidToImIdRsp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AppUidToImIdRsp) GetAppUserId() string {
	if x != nil {
		return x.AppUserId
	}
	return ""
}

type OnlineNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *OnlineNotify) Reset() {
	*x = OnlineNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineNotify) ProtoMessage() {}

func (x *OnlineNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineNotify.ProtoReflect.Descriptor instead.
func (*OnlineNotify) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{8}
}

func (x *OnlineNotify) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type OfflineNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *OfflineNotify) Reset() {
	*x = OfflineNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineNotify) ProtoMessage() {}

func (x *OfflineNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineNotify.ProtoReflect.Descriptor instead.
func (*OfflineNotify) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{9}
}

func (x *OfflineNotify) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type SwitchBackNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *SwitchBackNotify) Reset() {
	*x = SwitchBackNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchBackNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchBackNotify) ProtoMessage() {}

func (x *SwitchBackNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchBackNotify.ProtoReflect.Descriptor instead.
func (*SwitchBackNotify) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{10}
}

func (x *SwitchBackNotify) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type SwitchFrontNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *SwitchFrontNotify) Reset() {
	*x = SwitchFrontNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchFrontNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchFrontNotify) ProtoMessage() {}

func (x *SwitchFrontNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchFrontNotify.ProtoReflect.Descriptor instead.
func (*SwitchFrontNotify) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{11}
}

func (x *SwitchFrontNotify) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type HeartbeatNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *HeartbeatNotify) Reset() {
	*x = HeartbeatNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatNotify) ProtoMessage() {}

func (x *HeartbeatNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatNotify.ProtoReflect.Descriptor instead.
func (*HeartbeatNotify) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{12}
}

func (x *HeartbeatNotify) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 发红包
type RedPacketHandOutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrantUserId        int64              `protobuf:"varint,1,opt,name=grantUserId,proto3" json:"grantUserId,omitempty"`                                                         // 校验是否本人使用
	WalletType         int32              `protobuf:"varint,2,opt,name=walletType,proto3" json:"walletType,omitempty"`                                                           // 钱包类型,积分还是什么
	GrantScene         GrantScene         `protobuf:"varint,3,opt,name=grantScene,proto3,enum=pb_msg_userCenter.GrantScene" json:"grantScene,omitempty"`                         // 发送场景
	GroupRedPacketType GroupRedPacketType `protobuf:"varint,4,opt,name=groupRedPacketType,proto3,enum=pb_msg_userCenter.GroupRedPacketType" json:"groupRedPacketType,omitempty"` // 群红包分配类型
	AimId              int64              `protobuf:"varint,5,opt,name=aimId,proto3" json:"aimId,omitempty"`                                                                     // 目标id
	GroupAimId         int64              `protobuf:"varint,6,opt,name=groupAimId,proto3" json:"groupAimId,omitempty"`                                                           //群发时带的目标用户id
	Description        string             `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`                                                          // 描述
	CreateCount        int32              `protobuf:"varint,8,opt,name=createCount,proto3" json:"createCount,omitempty"`                                                         // 生成个数
	CreateValue        int64              `protobuf:"varint,9,opt,name=createValue,proto3" json:"createValue,omitempty"`                                                         // 金额
	WalletPasswd       string             `protobuf:"bytes,10,opt,name=walletPasswd,proto3" json:"walletPasswd,omitempty"`                                                       //
	AimName            string             `protobuf:"bytes,11,opt,name=aimName,proto3" json:"aimName,omitempty"`                                                                 // 目标名称
}

func (x *RedPacketHandOutReq) Reset() {
	*x = RedPacketHandOutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketHandOutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketHandOutReq) ProtoMessage() {}

func (x *RedPacketHandOutReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketHandOutReq.ProtoReflect.Descriptor instead.
func (*RedPacketHandOutReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{13}
}

func (x *RedPacketHandOutReq) GetGrantUserId() int64 {
	if x != nil {
		return x.GrantUserId
	}
	return 0
}

func (x *RedPacketHandOutReq) GetWalletType() int32 {
	if x != nil {
		return x.WalletType
	}
	return 0
}

func (x *RedPacketHandOutReq) GetGrantScene() GrantScene {
	if x != nil {
		return x.GrantScene
	}
	return GrantScene_PrivateChat
}

func (x *RedPacketHandOutReq) GetGroupRedPacketType() GroupRedPacketType {
	if x != nil {
		return x.GroupRedPacketType
	}
	return GroupRedPacketType_Lucky
}

func (x *RedPacketHandOutReq) GetAimId() int64 {
	if x != nil {
		return x.AimId
	}
	return 0
}

func (x *RedPacketHandOutReq) GetGroupAimId() int64 {
	if x != nil {
		return x.GroupAimId
	}
	return 0
}

func (x *RedPacketHandOutReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RedPacketHandOutReq) GetCreateCount() int32 {
	if x != nil {
		return x.CreateCount
	}
	return 0
}

func (x *RedPacketHandOutReq) GetCreateValue() int64 {
	if x != nil {
		return x.CreateValue
	}
	return 0
}

func (x *RedPacketHandOutReq) GetWalletPasswd() string {
	if x != nil {
		return x.WalletPasswd
	}
	return ""
}

func (x *RedPacketHandOutReq) GetAimName() string {
	if x != nil {
		return x.AimName
	}
	return ""
}

type RedPacketHandOutRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedPacketId int64          `protobuf:"varint,1,opt,name=redPacketId,proto3" json:"redPacketId,omitempty"` // 红包id
	Info        *RedPacketInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	ErrCode     pb_pub.ErrCode `protobuf:"varint,3,opt,name=errCode,proto3,enum=pb_pub.ErrCode" json:"errCode,omitempty"` // 返回码
	Reason      string         `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`                        // 原因
}

func (x *RedPacketHandOutRsp) Reset() {
	*x = RedPacketHandOutRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketHandOutRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketHandOutRsp) ProtoMessage() {}

func (x *RedPacketHandOutRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketHandOutRsp.ProtoReflect.Descriptor instead.
func (*RedPacketHandOutRsp) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{14}
}

func (x *RedPacketHandOutRsp) GetRedPacketId() int64 {
	if x != nil {
		return x.RedPacketId
	}
	return 0
}

func (x *RedPacketHandOutRsp) GetInfo() *RedPacketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *RedPacketHandOutRsp) GetErrCode() pb_pub.ErrCode {
	if x != nil {
		return x.ErrCode
	}
	return pb_pub.ErrCode(0)
}

func (x *RedPacketHandOutRsp) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 红包信息
type RedPacketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedPacketId        int64              `protobuf:"varint,1,opt,name=redPacketId,proto3" json:"redPacketId,omitempty"`                                                         // 红包id
	GrantUserId        int64              `protobuf:"varint,2,opt,name=grantUserId,proto3" json:"grantUserId,omitempty"`                                                         // 发放者id
	GrantScene         GrantScene         `protobuf:"varint,3,opt,name=grantScene,proto3,enum=pb_msg_userCenter.GrantScene" json:"grantScene,omitempty"`                         // 发放场景
	GroupRedPacketType GroupRedPacketType `protobuf:"varint,4,opt,name=groupRedPacketType,proto3,enum=pb_msg_userCenter.GroupRedPacketType" json:"groupRedPacketType,omitempty"` // 红包分发方式
	AimId              int64              `protobuf:"varint,5,opt,name=aimId,proto3" json:"aimId,omitempty"`                                                                     // 发放目标，用户或群id等
	GroupAimId         int64              `protobuf:"varint,6,opt,name=groupAimId,proto3" json:"groupAimId,omitempty"`                                                           // 群发时带的目标用户id列表,逗号分隔
	Description        string             `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`                                                          // 描述
	CreateCount        int32              `protobuf:"varint,8,opt,name=createCount,proto3" json:"createCount,omitempty"`                                                         // 生成个数
	CreateValue        int64              `protobuf:"varint,9,opt,name=createValue,proto3" json:"createValue,omitempty"`                                                         // 金额
	RemainCount        int32              `protobuf:"varint,10,opt,name=remainCount,proto3" json:"remainCount,omitempty"`                                                        // 剩余个数, 自己发的红包这两个才有效
	RemainValue        int64              `protobuf:"varint,11,opt,name=remainValue,proto3" json:"remainValue,omitempty"`                                                        // 剩余金额，自己发的红包这两个才有效
	Status             RedPacketStatus    `protobuf:"varint,12,opt,name=status,proto3,enum=pb_msg_userCenter.RedPacketStatus" json:"status,omitempty"`                           // 红包状态
	CreateTime         int64              `protobuf:"varint,13,opt,name=createTime,proto3" json:"createTime,omitempty"`                                                          // 红包创建时间
}

func (x *RedPacketInfo) Reset() {
	*x = RedPacketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketInfo) ProtoMessage() {}

func (x *RedPacketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketInfo.ProtoReflect.Descriptor instead.
func (*RedPacketInfo) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{15}
}

func (x *RedPacketInfo) GetRedPacketId() int64 {
	if x != nil {
		return x.RedPacketId
	}
	return 0
}

func (x *RedPacketInfo) GetGrantUserId() int64 {
	if x != nil {
		return x.GrantUserId
	}
	return 0
}

func (x *RedPacketInfo) GetGrantScene() GrantScene {
	if x != nil {
		return x.GrantScene
	}
	return GrantScene_PrivateChat
}

func (x *RedPacketInfo) GetGroupRedPacketType() GroupRedPacketType {
	if x != nil {
		return x.GroupRedPacketType
	}
	return GroupRedPacketType_Lucky
}

func (x *RedPacketInfo) GetAimId() int64 {
	if x != nil {
		return x.AimId
	}
	return 0
}

func (x *RedPacketInfo) GetGroupAimId() int64 {
	if x != nil {
		return x.GroupAimId
	}
	return 0
}

func (x *RedPacketInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RedPacketInfo) GetCreateCount() int32 {
	if x != nil {
		return x.CreateCount
	}
	return 0
}

func (x *RedPacketInfo) GetCreateValue() int64 {
	if x != nil {
		return x.CreateValue
	}
	return 0
}

func (x *RedPacketInfo) GetRemainCount() int32 {
	if x != nil {
		return x.RemainCount
	}
	return 0
}

func (x *RedPacketInfo) GetRemainValue() int64 {
	if x != nil {
		return x.RemainValue
	}
	return 0
}

func (x *RedPacketInfo) GetStatus() RedPacketStatus {
	if x != nil {
		return x.Status
	}
	return RedPacketStatus_Edit
}

func (x *RedPacketInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 生成红包后通知到目标用户
type RedPacketNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedPacketId int64          `protobuf:"varint,1,opt,name=redPacketId,proto3" json:"redPacketId,omitempty"` // 红包id
	Info        *RedPacketInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`                // 数据信息
}

func (x *RedPacketNotify) Reset() {
	*x = RedPacketNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketNotify) ProtoMessage() {}

func (x *RedPacketNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketNotify.ProtoReflect.Descriptor instead.
func (*RedPacketNotify) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{16}
}

func (x *RedPacketNotify) GetRedPacketId() int64 {
	if x != nil {
		return x.RedPacketId
	}
	return 0
}

func (x *RedPacketNotify) GetInfo() *RedPacketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

//	结果  pb_pub.CommRsp
//
// 领红包
type RedPacketReceiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedPacketId int64 `protobuf:"varint,1,opt,name=redPacketId,proto3" json:"redPacketId,omitempty"` // 红包id
}

func (x *RedPacketReceiveReq) Reset() {
	*x = RedPacketReceiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketReceiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketReceiveReq) ProtoMessage() {}

func (x *RedPacketReceiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketReceiveReq.ProtoReflect.Descriptor instead.
func (*RedPacketReceiveReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{17}
}

func (x *RedPacketReceiveReq) GetRedPacketId() int64 {
	if x != nil {
		return x.RedPacketId
	}
	return 0
}

type RedPacketReceiveRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedPacketId        int64              `protobuf:"varint,1,opt,name=redPacketId,proto3" json:"redPacketId,omitempty"`                                                         // 红包id
	WalletType         int32              `protobuf:"varint,2,opt,name=walletType,proto3" json:"walletType,omitempty"`                                                           // 钱包类型,积分还是什么
	ReceivedValue      int64              `protobuf:"varint,3,opt,name=receivedValue,proto3" json:"receivedValue,omitempty"`                                                     // 领取了多少
	GrantUserId        int64              `protobuf:"varint,4,opt,name=grantUserId,proto3" json:"grantUserId,omitempty"`                                                         // 发放者id
	GrantScene         GrantScene         `protobuf:"varint,5,opt,name=grantScene,proto3,enum=pb_msg_userCenter.GrantScene" json:"grantScene,omitempty"`                         // 发放场景
	GroupRedPacketType GroupRedPacketType `protobuf:"varint,6,opt,name=groupRedPacketType,proto3,enum=pb_msg_userCenter.GroupRedPacketType" json:"groupRedPacketType,omitempty"` // 红包分发方式
	AimId              int64              `protobuf:"varint,7,opt,name=aimId,proto3" json:"aimId,omitempty"`                                                                     // 发放目标，用户或群id等
	// int64 createValue = 9; // 金额
	// int32 remainCount = 10; // 剩余个数, 自己发的红包这两个才有效
	// int64 remainValue = 11; // 剩余金额，自己发的红包这两个才有效
	Status RedPacketStatus `protobuf:"varint,12,opt,name=status,proto3,enum=pb_msg_userCenter.RedPacketStatus" json:"status,omitempty"` // 红包状态
}

func (x *RedPacketReceiveRsp) Reset() {
	*x = RedPacketReceiveRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketReceiveRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketReceiveRsp) ProtoMessage() {}

func (x *RedPacketReceiveRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketReceiveRsp.ProtoReflect.Descriptor instead.
func (*RedPacketReceiveRsp) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{18}
}

func (x *RedPacketReceiveRsp) GetRedPacketId() int64 {
	if x != nil {
		return x.RedPacketId
	}
	return 0
}

func (x *RedPacketReceiveRsp) GetWalletType() int32 {
	if x != nil {
		return x.WalletType
	}
	return 0
}

func (x *RedPacketReceiveRsp) GetReceivedValue() int64 {
	if x != nil {
		return x.ReceivedValue
	}
	return 0
}

func (x *RedPacketReceiveRsp) GetGrantUserId() int64 {
	if x != nil {
		return x.GrantUserId
	}
	return 0
}

func (x *RedPacketReceiveRsp) GetGrantScene() GrantScene {
	if x != nil {
		return x.GrantScene
	}
	return GrantScene_PrivateChat
}

func (x *RedPacketReceiveRsp) GetGroupRedPacketType() GroupRedPacketType {
	if x != nil {
		return x.GroupRedPacketType
	}
	return GroupRedPacketType_Lucky
}

func (x *RedPacketReceiveRsp) GetAimId() int64 {
	if x != nil {
		return x.AimId
	}
	return 0
}

func (x *RedPacketReceiveRsp) GetStatus() RedPacketStatus {
	if x != nil {
		return x.Status
	}
	return RedPacketStatus_Edit
}

// 领取红包后的通知，一般只通知给发放者，界面展示 xx领取了您的红包
type RedPacketReceivedNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedPacketId   int64           `protobuf:"varint,1,opt,name=redPacketId,proto3" json:"redPacketId,omitempty"`     // 红包id
	ReceiveUserId int64           `protobuf:"varint,2,opt,name=receiveUserId,proto3" json:"receiveUserId,omitempty"` // 领取者id
	GrantUserId   int64           `protobuf:"varint,3,opt,name=grantUserId,proto3" json:"grantUserId,omitempty"`     // 发放者id
	AimId         int64           `protobuf:"varint,4,opt,name=aimId,proto3" json:"aimId,omitempty"`                 // 发放目标，用户或群id等
	ReceivedValue int64           `protobuf:"varint,5,opt,name=receivedValue,proto3" json:"receivedValue,omitempty"`
	RemainCount   int32           `protobuf:"varint,6,opt,name=remainCount,proto3" json:"remainCount,omitempty"`                              // 剩余个数, 自己发的红包这两个才有效
	RemainValue   int64           `protobuf:"varint,7,opt,name=remainValue,proto3" json:"remainValue,omitempty"`                              // 剩余金额，自己发的红包这两个才有效
	Status        RedPacketStatus `protobuf:"varint,8,opt,name=status,proto3,enum=pb_msg_userCenter.RedPacketStatus" json:"status,omitempty"` // 红包状态
}

func (x *RedPacketReceivedNotify) Reset() {
	*x = RedPacketReceivedNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketReceivedNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketReceivedNotify) ProtoMessage() {}

func (x *RedPacketReceivedNotify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketReceivedNotify.ProtoReflect.Descriptor instead.
func (*RedPacketReceivedNotify) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{19}
}

func (x *RedPacketReceivedNotify) GetRedPacketId() int64 {
	if x != nil {
		return x.RedPacketId
	}
	return 0
}

func (x *RedPacketReceivedNotify) GetReceiveUserId() int64 {
	if x != nil {
		return x.ReceiveUserId
	}
	return 0
}

func (x *RedPacketReceivedNotify) GetGrantUserId() int64 {
	if x != nil {
		return x.GrantUserId
	}
	return 0
}

func (x *RedPacketReceivedNotify) GetAimId() int64 {
	if x != nil {
		return x.AimId
	}
	return 0
}

func (x *RedPacketReceivedNotify) GetReceivedValue() int64 {
	if x != nil {
		return x.ReceivedValue
	}
	return 0
}

func (x *RedPacketReceivedNotify) GetRemainCount() int32 {
	if x != nil {
		return x.RemainCount
	}
	return 0
}

func (x *RedPacketReceivedNotify) GetRemainValue() int64 {
	if x != nil {
		return x.RemainValue
	}
	return 0
}

func (x *RedPacketReceivedNotify) GetStatus() RedPacketStatus {
	if x != nil {
		return x.Status
	}
	return RedPacketStatus_Edit
}

// 获取单个红包信息
type RedPacketInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedPacketId int64 `protobuf:"varint,1,opt,name=redPacketId,proto3" json:"redPacketId,omitempty"` // 红包id
}

func (x *RedPacketInfoReq) Reset() {
	*x = RedPacketInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketInfoReq) ProtoMessage() {}

func (x *RedPacketInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketInfoReq.ProtoReflect.Descriptor instead.
func (*RedPacketInfoReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{20}
}

func (x *RedPacketInfoReq) GetRedPacketId() int64 {
	if x != nil {
		return x.RedPacketId
	}
	return 0
}

type RedPacketInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data           *RedPacketInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`                      // 红包信息
	IsMeReceived   bool           `protobuf:"varint,2,opt,name=isMeReceived,proto3" json:"isMeReceived,omitempty"`     // 我是否领了红包
	IReceivedCount int64          `protobuf:"varint,3,opt,name=iReceivedCount,proto3" json:"iReceivedCount,omitempty"` // 我领了多少
}

func (x *RedPacketInfoRsp) Reset() {
	*x = RedPacketInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketInfoRsp) ProtoMessage() {}

func (x *RedPacketInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketInfoRsp.ProtoReflect.Descriptor instead.
func (*RedPacketInfoRsp) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{21}
}

func (x *RedPacketInfoRsp) GetData() *RedPacketInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RedPacketInfoRsp) GetIsMeReceived() bool {
	if x != nil {
		return x.IsMeReceived
	}
	return false
}

func (x *RedPacketInfoRsp) GetIReceivedCount() int64 {
	if x != nil {
		return x.IReceivedCount
	}
	return 0
}

// 红包领取列表数据
type RedPacketReceivedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedPacketId        int64              `protobuf:"varint,1,opt,name=redPacketId,proto3" json:"redPacketId,omitempty"`                                                         // 红包id
	GrantUserId        int64              `protobuf:"varint,2,opt,name=grantUserId,proto3" json:"grantUserId,omitempty"`                                                         // 发放者id
	GrantScene         GrantScene         `protobuf:"varint,3,opt,name=grantScene,proto3,enum=pb_msg_userCenter.GrantScene" json:"grantScene,omitempty"`                         // 发放场景
	GroupRedPacketType GroupRedPacketType `protobuf:"varint,4,opt,name=groupRedPacketType,proto3,enum=pb_msg_userCenter.GroupRedPacketType" json:"groupRedPacketType,omitempty"` // 红包分发方式
	AimId              int64              `protobuf:"varint,5,opt,name=aimId,proto3" json:"aimId,omitempty"`                                                                     // 发放目标，用户或群id等
	GroupAimId         int64              `protobuf:"varint,6,opt,name=groupAimId,proto3" json:"groupAimId,omitempty"`                                                           // 群发时带的目标用户id列表,逗号分隔
	Description        string             `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`                                                          // 描述
	RecipientUserId    int64              `protobuf:"varint,8,opt,name=recipientUserId,proto3" json:"recipientUserId,omitempty"`
	ReceivedValue      int64              `protobuf:"varint,9,opt,name=receivedValue,proto3" json:"receivedValue,omitempty"`
	CreatedTime        int64              `protobuf:"varint,10,opt,name=createdTime,proto3" json:"createdTime,omitempty"` // 领取时间
}

func (x *RedPacketReceivedItem) Reset() {
	*x = RedPacketReceivedItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketReceivedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketReceivedItem) ProtoMessage() {}

func (x *RedPacketReceivedItem) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketReceivedItem.ProtoReflect.Descriptor instead.
func (*RedPacketReceivedItem) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{22}
}

func (x *RedPacketReceivedItem) GetRedPacketId() int64 {
	if x != nil {
		return x.RedPacketId
	}
	return 0
}

func (x *RedPacketReceivedItem) GetGrantUserId() int64 {
	if x != nil {
		return x.GrantUserId
	}
	return 0
}

func (x *RedPacketReceivedItem) GetGrantScene() GrantScene {
	if x != nil {
		return x.GrantScene
	}
	return GrantScene_PrivateChat
}

func (x *RedPacketReceivedItem) GetGroupRedPacketType() GroupRedPacketType {
	if x != nil {
		return x.GroupRedPacketType
	}
	return GroupRedPacketType_Lucky
}

func (x *RedPacketReceivedItem) GetAimId() int64 {
	if x != nil {
		return x.AimId
	}
	return 0
}

func (x *RedPacketReceivedItem) GetGroupAimId() int64 {
	if x != nil {
		return x.GroupAimId
	}
	return 0
}

func (x *RedPacketReceivedItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RedPacketReceivedItem) GetRecipientUserId() int64 {
	if x != nil {
		return x.RecipientUserId
	}
	return 0
}

func (x *RedPacketReceivedItem) GetReceivedValue() int64 {
	if x != nil {
		return x.ReceivedValue
	}
	return 0
}

func (x *RedPacketReceivedItem) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

// 自己领取的
type RedPacketMyReceivedListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *RedPacketMyReceivedListReq) Reset() {
	*x = RedPacketMyReceivedListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketMyReceivedListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketMyReceivedListReq) ProtoMessage() {}

func (x *RedPacketMyReceivedListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketMyReceivedListReq.ProtoReflect.Descriptor instead.
func (*RedPacketMyReceivedListReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{23}
}

func (x *RedPacketMyReceivedListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RedPacketMyReceivedListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type RedPacketMyReceivedListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int32                    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int32                    `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	TotalCount int64                    `protobuf:"varint,3,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Items      []*RedPacketReceivedItem `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RedPacketMyReceivedListRsp) Reset() {
	*x = RedPacketMyReceivedListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketMyReceivedListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketMyReceivedListRsp) ProtoMessage() {}

func (x *RedPacketMyReceivedListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketMyReceivedListRsp.ProtoReflect.Descriptor instead.
func (*RedPacketMyReceivedListRsp) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{24}
}

func (x *RedPacketMyReceivedListRsp) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RedPacketMyReceivedListRsp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RedPacketMyReceivedListRsp) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *RedPacketMyReceivedListRsp) GetItems() []*RedPacketReceivedItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// 自己发出去的红包列表
type RedPacketMyHandedOutListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *RedPacketMyHandedOutListReq) Reset() {
	*x = RedPacketMyHandedOutListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketMyHandedOutListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketMyHandedOutListReq) ProtoMessage() {}

func (x *RedPacketMyHandedOutListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketMyHandedOutListReq.ProtoReflect.Descriptor instead.
func (*RedPacketMyHandedOutListReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{25}
}

func (x *RedPacketMyHandedOutListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RedPacketMyHandedOutListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type RedPacketMyHandedOutListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int32            `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int32            `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	TotalCount int64            `protobuf:"varint,3,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Items      []*RedPacketInfo `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RedPacketMyHandedOutListRsp) Reset() {
	*x = RedPacketMyHandedOutListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketMyHandedOutListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketMyHandedOutListRsp) ProtoMessage() {}

func (x *RedPacketMyHandedOutListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketMyHandedOutListRsp.ProtoReflect.Descriptor instead.
func (*RedPacketMyHandedOutListRsp) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{26}
}

func (x *RedPacketMyHandedOutListRsp) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RedPacketMyHandedOutListRsp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RedPacketMyHandedOutListRsp) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *RedPacketMyHandedOutListRsp) GetItems() []*RedPacketInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type RedPacketFlowItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RedPacketId     int64 `protobuf:"varint,2,opt,name=redPacketId,proto3" json:"redPacketId,omitempty"`
	RecipientUserId int64 `protobuf:"varint,3,opt,name=recipientUserId,proto3" json:"recipientUserId,omitempty"`
	Value           int64 `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	CreateTime      int64 `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *RedPacketFlowItem) Reset() {
	*x = RedPacketFlowItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketFlowItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketFlowItem) ProtoMessage() {}

func (x *RedPacketFlowItem) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketFlowItem.ProtoReflect.Descriptor instead.
func (*RedPacketFlowItem) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{27}
}

func (x *RedPacketFlowItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RedPacketFlowItem) GetRedPacketId() int64 {
	if x != nil {
		return x.RedPacketId
	}
	return 0
}

func (x *RedPacketFlowItem) GetRecipientUserId() int64 {
	if x != nil {
		return x.RecipientUserId
	}
	return 0
}

func (x *RedPacketFlowItem) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *RedPacketFlowItem) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 获取当前红包领取列表，打开红包后下面的领取列表
type RedPacketCurFlowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize    int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	RedPacketId int64 `protobuf:"varint,3,opt,name=redPacketId,proto3" json:"redPacketId,omitempty"` // 红包id
}

func (x *RedPacketCurFlowReq) Reset() {
	*x = RedPacketCurFlowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketCurFlowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketCurFlowReq) ProtoMessage() {}

func (x *RedPacketCurFlowReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketCurFlowReq.ProtoReflect.Descriptor instead.
func (*RedPacketCurFlowReq) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{28}
}

func (x *RedPacketCurFlowReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RedPacketCurFlowReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RedPacketCurFlowReq) GetRedPacketId() int64 {
	if x != nil {
		return x.RedPacketId
	}
	return 0
}

type RedPacketCurFlowRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int32                `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int32                `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	TotalCount int64                `protobuf:"varint,3,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Items      []*RedPacketFlowItem `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RedPacketCurFlowRsp) Reset() {
	*x = RedPacketCurFlowRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketCurFlowRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketCurFlowRsp) ProtoMessage() {}

func (x *RedPacketCurFlowRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_msg_user_center_userCenter_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketCurFlowRsp.ProtoReflect.Descriptor instead.
func (*RedPacketCurFlowRsp) Descriptor() ([]byte, []int) {
	return file_pb_msg_user_center_userCenter_proto_rawDescGZIP(), []int{29}
}

func (x *RedPacketCurFlowRsp) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RedPacketCurFlowRsp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RedPacketCurFlowRsp) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *RedPacketCurFlowRsp) GetItems() []*RedPacketFlowItem {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_pb_msg_user_center_userCenter_proto protoreflect.FileDescriptor

var file_pb_msg_user_center_userCenter_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x1a, 0x17, 0x70, 0x62, 0x5f, 0x70, 0x75, 0x62,
	0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x70, 0x62, 0x5f, 0x70, 0x75, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x0d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x48, 0x0a, 0x0d, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x28, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22,
	0x46, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12,
	0x36, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xe8, 0x04, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x69, 0x67, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x62, 0x69, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x75, 0x73, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x70, 0x62, 0x5f, 0x70, 0x75, 0x62, 0x2e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x66, 0x72, 0x65, 0x65, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x66, 0x72, 0x65, 0x65, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xdf, 0x06, 0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x30, 0x0a, 0x13, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x47, 0x72, 0x61, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x70, 0x62, 0x5f, 0x70, 0x75, 0x62, 0x2e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x42, 0x61,
	0x63, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x54, 0x6f, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x12, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x45, 0x78, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x78, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x70, 0x75, 0x62,
	0x2e, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x09, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x36, 0x0a, 0x08,
	0x45, 0x78, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x45, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x55, 0x69, 0x64, 0x54, 0x6f,
	0x49, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x0f, 0x41,
	0x70, 0x70, 0x55, 0x69, 0x64, 0x54, 0x6f, 0x49, 0x6d, 0x49, 0x64, 0x52, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x0c, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x27, 0x0a, 0x0d, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x10, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x11, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0f, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xc7, 0x03, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x61, 0x6e,
	0x64, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x0a, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x55, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x61, 0x69, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x69,
	0x6d, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x69, 0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x69, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x13, 0x52, 0x65,
	0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x43,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x5f,
	0x70, 0x75, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xa5, 0x04, 0x0a,
	0x0d, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x12, 0x55, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e,
	0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x69, 0x6d, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x69, 0x6d, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x69, 0x6d, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x0f, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65,
	0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x37, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x87, 0x03, 0x0a, 0x13, 0x52, 0x65, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x73, 0x70,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x0a, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x55, 0x0a, 0x12, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xbf, 0x02, 0x0a, 0x17, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x69, 0x6d, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x34, 0x0a, 0x10, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x10, 0x52,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12,
	0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x4d, 0x65, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x4d,
	0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x69, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xbb, 0x03, 0x0a, 0x15, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x3d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x55,
	0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x69, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x69, 0x6d, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x69, 0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x0f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x4c, 0x0a, 0x1a, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x79, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xac, 0x01,
	0x0a, 0x1a, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x79, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x62,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4d, 0x0a, 0x1b,
	0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x65,
	0x64, 0x4f, 0x75, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x1b,
	0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x79, 0x48, 0x61, 0x6e, 0x64, 0x65,
	0x64, 0x4f, 0x75, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x13, 0x52,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0x2c, 0x0a, 0x0a, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x68, 0x61, 0x74, 0x10, 0x01, 0x2a, 0x2c, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05,
	0x4c, 0x75, 0x63, 0x6b, 0x79, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x10, 0x01, 0x2a, 0x51, 0x0a, 0x0f, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x64, 0x69, 0x74, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x6f, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4f,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x65, 0x64, 0x10, 0x04, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x61, 0x6c, 0x6c, 0x65, 0x65, 0x30, 0x30, 0x2f,
	0x70, 0x62, 0x2f, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_msg_user_center_userCenter_proto_rawDescOnce sync.Once
	file_pb_msg_user_center_userCenter_proto_rawDescData = file_pb_msg_user_center_userCenter_proto_rawDesc
)

func file_pb_msg_user_center_userCenter_proto_rawDescGZIP() []byte {
	file_pb_msg_user_center_userCenter_proto_rawDescOnce.Do(func() {
		file_pb_msg_user_center_userCenter_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_msg_user_center_userCenter_proto_rawDescData)
	})
	return file_pb_msg_user_center_userCenter_proto_rawDescData
}

var file_pb_msg_user_center_userCenter_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pb_msg_user_center_userCenter_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_pb_msg_user_center_userCenter_proto_goTypes = []interface{}{
	(GrantScene)(0),                     // 0: pb_msg_userCenter.GrantScene
	(GroupRedPacketType)(0),             // 1: pb_msg_userCenter.GroupRedPacketType
	(RedPacketStatus)(0),                // 2: pb_msg_userCenter.RedPacketStatus
	(*FriendInfoReq)(nil),               // 3: pb_msg_userCenter.FriendInfoReq
	(*FriendInfoRsp)(nil),               // 4: pb_msg_userCenter.FriendInfoRsp
	(*UsersInfoReq)(nil),                // 5: pb_msg_userCenter.UsersInfoReq
	(*UsersInfoRsp)(nil),                // 6: pb_msg_userCenter.UsersInfoRsp
	(*UsersInfo)(nil),                   // 7: pb_msg_userCenter.UsersInfo
	(*FriendInfo)(nil),                  // 8: pb_msg_userCenter.FriendInfo
	(*AppUidToImIdReq)(nil),             // 9: pb_msg_userCenter.AppUidToImIdReq
	(*AppUidToImIdRsp)(nil),             // 10: pb_msg_userCenter.AppUidToImIdRsp
	(*OnlineNotify)(nil),                // 11: pb_msg_userCenter.OnlineNotify
	(*OfflineNotify)(nil),               // 12: pb_msg_userCenter.OfflineNotify
	(*SwitchBackNotify)(nil),            // 13: pb_msg_userCenter.SwitchBackNotify
	(*SwitchFrontNotify)(nil),           // 14: pb_msg_userCenter.SwitchFrontNotify
	(*HeartbeatNotify)(nil),             // 15: pb_msg_userCenter.HeartbeatNotify
	(*RedPacketHandOutReq)(nil),         // 16: pb_msg_userCenter.RedPacketHandOutReq
	(*RedPacketHandOutRsp)(nil),         // 17: pb_msg_userCenter.RedPacketHandOutRsp
	(*RedPacketInfo)(nil),               // 18: pb_msg_userCenter.RedPacketInfo
	(*RedPacketNotify)(nil),             // 19: pb_msg_userCenter.RedPacketNotify
	(*RedPacketReceiveReq)(nil),         // 20: pb_msg_userCenter.RedPacketReceiveReq
	(*RedPacketReceiveRsp)(nil),         // 21: pb_msg_userCenter.RedPacketReceiveRsp
	(*RedPacketReceivedNotify)(nil),     // 22: pb_msg_userCenter.RedPacketReceivedNotify
	(*RedPacketInfoReq)(nil),            // 23: pb_msg_userCenter.RedPacketInfoReq
	(*RedPacketInfoRsp)(nil),            // 24: pb_msg_userCenter.RedPacketInfoRsp
	(*RedPacketReceivedItem)(nil),       // 25: pb_msg_userCenter.RedPacketReceivedItem
	(*RedPacketMyReceivedListReq)(nil),  // 26: pb_msg_userCenter.RedPacketMyReceivedListReq
	(*RedPacketMyReceivedListRsp)(nil),  // 27: pb_msg_userCenter.RedPacketMyReceivedListRsp
	(*RedPacketMyHandedOutListReq)(nil), // 28: pb_msg_userCenter.RedPacketMyHandedOutListReq
	(*RedPacketMyHandedOutListRsp)(nil), // 29: pb_msg_userCenter.RedPacketMyHandedOutListRsp
	(*RedPacketFlowItem)(nil),           // 30: pb_msg_userCenter.RedPacketFlowItem
	(*RedPacketCurFlowReq)(nil),         // 31: pb_msg_userCenter.RedPacketCurFlowReq
	(*RedPacketCurFlowRsp)(nil),         // 32: pb_msg_userCenter.RedPacketCurFlowRsp
	nil,                                 // 33: pb_msg_userCenter.FriendInfo.ExpEntry
	(pb_pub.USER_STATE_TYPE)(0),         // 34: pb_pub.USER_STATE_TYPE
	(pb_pub.MODEL_TYPE)(0),              // 35: pb_pub.MODEL_TYPE
	(pb_pub.ErrCode)(0),                 // 36: pb_pub.ErrCode
}
var file_pb_msg_user_center_userCenter_proto_depIdxs = []int32{
	8,  // 0: pb_msg_userCenter.FriendInfoRsp.results:type_name -> pb_msg_userCenter.FriendInfo
	7,  // 1: pb_msg_userCenter.UsersInfoRsp.results:type_name -> pb_msg_userCenter.UsersInfo
	34, // 2: pb_msg_userCenter.UsersInfo.State:type_name -> pb_pub.USER_STATE_TYPE
	34, // 3: pb_msg_userCenter.FriendInfo.userState:type_name -> pb_pub.USER_STATE_TYPE
	33, // 4: pb_msg_userCenter.FriendInfo.exp:type_name -> pb_msg_userCenter.FriendInfo.ExpEntry
	35, // 5: pb_msg_userCenter.FriendInfo.modelType:type_name -> pb_pub.MODEL_TYPE
	0,  // 6: pb_msg_userCenter.RedPacketHandOutReq.grantScene:type_name -> pb_msg_userCenter.GrantScene
	1,  // 7: pb_msg_userCenter.RedPacketHandOutReq.groupRedPacketType:type_name -> pb_msg_userCenter.GroupRedPacketType
	18, // 8: pb_msg_userCenter.RedPacketHandOutRsp.info:type_name -> pb_msg_userCenter.RedPacketInfo
	36, // 9: pb_msg_userCenter.RedPacketHandOutRsp.errCode:type_name -> pb_pub.ErrCode
	0,  // 10: pb_msg_userCenter.RedPacketInfo.grantScene:type_name -> pb_msg_userCenter.GrantScene
	1,  // 11: pb_msg_userCenter.RedPacketInfo.groupRedPacketType:type_name -> pb_msg_userCenter.GroupRedPacketType
	2,  // 12: pb_msg_userCenter.RedPacketInfo.status:type_name -> pb_msg_userCenter.RedPacketStatus
	18, // 13: pb_msg_userCenter.RedPacketNotify.info:type_name -> pb_msg_userCenter.RedPacketInfo
	0,  // 14: pb_msg_userCenter.RedPacketReceiveRsp.grantScene:type_name -> pb_msg_userCenter.GrantScene
	1,  // 15: pb_msg_userCenter.RedPacketReceiveRsp.groupRedPacketType:type_name -> pb_msg_userCenter.GroupRedPacketType
	2,  // 16: pb_msg_userCenter.RedPacketReceiveRsp.status:type_name -> pb_msg_userCenter.RedPacketStatus
	2,  // 17: pb_msg_userCenter.RedPacketReceivedNotify.status:type_name -> pb_msg_userCenter.RedPacketStatus
	18, // 18: pb_msg_userCenter.RedPacketInfoRsp.data:type_name -> pb_msg_userCenter.RedPacketInfo
	0,  // 19: pb_msg_userCenter.RedPacketReceivedItem.grantScene:type_name -> pb_msg_userCenter.GrantScene
	1,  // 20: pb_msg_userCenter.RedPacketReceivedItem.groupRedPacketType:type_name -> pb_msg_userCenter.GroupRedPacketType
	25, // 21: pb_msg_userCenter.RedPacketMyReceivedListRsp.items:type_name -> pb_msg_userCenter.RedPacketReceivedItem
	18, // 22: pb_msg_userCenter.RedPacketMyHandedOutListRsp.items:type_name -> pb_msg_userCenter.RedPacketInfo
	30, // 23: pb_msg_userCenter.RedPacketCurFlowRsp.items:type_name -> pb_msg_userCenter.RedPacketFlowItem
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_pb_msg_user_center_userCenter_proto_init() }
func file_pb_msg_user_center_userCenter_proto_init() {
	if File_pb_msg_user_center_userCenter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_msg_user_center_userCenter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppUidToImIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppUidToImIdRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchBackNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchFrontNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketHandOutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketHandOutRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketReceiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketReceiveRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketReceivedNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketReceivedItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketMyReceivedListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketMyReceivedListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketMyHandedOutListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketMyHandedOutListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketFlowItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketCurFlowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_msg_user_center_userCenter_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketCurFlowRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_msg_user_center_userCenter_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_msg_user_center_userCenter_proto_goTypes,
		DependencyIndexes: file_pb_msg_user_center_userCenter_proto_depIdxs,
		EnumInfos:         file_pb_msg_user_center_userCenter_proto_enumTypes,
		MessageInfos:      file_pb_msg_user_center_userCenter_proto_msgTypes,
	}.Build()
	File_pb_msg_user_center_userCenter_proto = out.File
	file_pb_msg_user_center_userCenter_proto_rawDesc = nil
	file_pb_msg_user_center_userCenter_proto_goTypes = nil
	file_pb_msg_user_center_userCenter_proto_depIdxs = nil
}
